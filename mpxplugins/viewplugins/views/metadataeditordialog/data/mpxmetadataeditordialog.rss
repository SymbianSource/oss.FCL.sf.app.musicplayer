/*
* Copyright (c) 2006 Nokia Corporation and/or its subsidiary(-ies).
* All rights reserved.
* This component and the accompanying materials are made available
* under the terms of "Eclipse Public License v1.0"
* which accompanies this distribution, and is available
* at the URL "http://www.eclipse.org/legal/epl-v10.html".
*
* Initial Contributors:
* Nokia Corporation - initial contribution.
*
* Contributors:
*
* Description:  Resource definitions for project mpxmetadata editor dialog
*
*/



// RESOURCE NAME IDENTIFIER
NAME    MXMP // 4 letter ID

// INCLUDES
#include <avkon.rsg>
#include <avkon.rh>
#include <avkon.loc>
#include <eikon.rh>
#include <avkon.mbg>
#include <bldvariant.hrh>

#include <mpxmetadataeditordialog.loc>
#include "mpxmetadataeditordialog.hrh"


// RESOURCE IDENTIFIER
RESOURCE RSS_SIGNATURE { }

RESOURCE TBUF 
    {
    buf = "";
    }


// RESOURCE DEFINITIONS 
// -----------------------------------------------------------------------------
//
//    r_mpx_cui_song_details_menubar
//    Menubar for metadata editor dialog
//
// -----------------------------------------------------------------------------
//
RESOURCE MENU_BAR r_mpx_cui_song_details_menubar
    {
    titles =
        {
        MENU_TITLE
            {
            menu_pane = r_mpx_cui_song_details_menupane;
            }
        };
    }

// -----------------------------------------------------------------------------
// 
//    r_mpx_cui_song_details_menupane
//    Menu pane of options command for metadata editor dialog 
//
// -----------------------------------------------------------------------------
//
RESOURCE MENU_PANE r_mpx_cui_song_details_menupane
    {
    items =
        {
        MENU_ITEM
            {
            command = EMPXCmdSongDetailsChange;
            txt = qtn_options_change;
            },
        MENU_ITEM
            {
            command = EMPXCmdSongDetails;
            txt = qtn_options_view_file_details;
            },
        MENU_ITEM
            {
            command = EAknCmdHelp;
            txt = qtn_options_help;
            },
        MENU_ITEM
            {
            command = EAknCmdExit;
            txt = qtn_options_exit;
            }
        };
    }

#ifdef __ENABLE_MSK
// ---------------------------------------------------------------------------
// r_mpx_cui_song_details_softkeys_options_empty_done
// CBA for Song Details view.
// ---------------------------------------------------------------------------
// 
RESOURCE CBA r_mpx_cui_song_details_softkeys_options_empty_done
    {
    buttons =
        {
        CBA_BUTTON {id=EAknSoftkeyOptions; txt=text_softkey_option;},
        CBA_BUTTON {id=EAknSoftkeyDone; txt=text_softkey_done; },
        CBA_BUTTON {id=EAknSoftkeyForwardKeyEvent; txt=text_softkey_empty; }
        };
    }

// ---------------------------------------------------------------------------
// r_mpx_cui_song_details_softkeys_options_empty_back
// CBA for Song Details view.
// ---------------------------------------------------------------------------
// 
RESOURCE CBA r_mpx_cui_song_details_softkeys_options_empty_back
    {
    buttons =
        {
        CBA_BUTTON {id=EAknSoftkeyOptions; txt=text_softkey_option;},
        CBA_BUTTON {id=EAknSoftkeyBack; txt=text_softkey_back; },
        CBA_BUTTON {id=EAknSoftkeyForwardKeyEvent; txt=text_softkey_empty; }
        };
    }
        
// ---------------------------------------------------------------------------
// r_mpx_cui_song_details_softkeys_options_change_done
// CBA for Song Details view.
// ---------------------------------------------------------------------------
// 
RESOURCE CBA r_mpx_cui_song_details_softkeys_options_change_done
    {
    buttons =
        {
        CBA_BUTTON {id=EAknSoftkeyOptions; txt = text_softkey_option;},
        CBA_BUTTON {id=EAknSoftkeyDone; txt=text_softkey_done; },
        CBA_BUTTON {id=EAknSoftkeyForwardKeyEvent; txt=qtn_msk_change; }
        };
    }
#endif // __ENABLE_MSK

// -----------------------------------------------------------------------------
//
//    r_mpx_cui_song_details_title
//    Title for metadata editor dialog for tracks.
//
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_cui_song_details_title
    {
    buf = qtn_mus_title_details_track;
    }

#ifdef __ENABLE_MSK
// -----------------------------------------------------------------------------
//   
//    r_mpx_cui_song_details_dialog
//    Dialog for getting the song info
//
// -----------------------------------------------------------------------------
//
RESOURCE DIALOG r_mpx_cui_song_details_dialog
    {
    flags = EAknDialogGenericFullScreen;
    buttons = r_mpx_cui_song_details_softkeys_options_empty_back;
    form = r_mpx_cui_song_details_form;
    }
    
// -----------------------------------------------------------------------------
//   
//    r_mpx_cui_song_details_dialog_no_move_library
//    Dialog for getting the song info
//
// -----------------------------------------------------------------------------
//
RESOURCE DIALOG r_mpx_cui_song_details_dialog_no_move_library
    {
    flags = EAknDialogGenericFullScreen;
    buttons = r_mpx_cui_song_details_softkeys_options_empty_done;
    form = r_mpx_cui_song_details_form_no_move_library;
    }

#else
// -----------------------------------------------------------------------------
//   
//    r_mpx_cui_song_details_dialog
//    Dialog for getting the song info
//
// -----------------------------------------------------------------------------
//
RESOURCE DIALOG r_mpx_cui_song_details_dialog
    {
    flags = EAknDialogGenericFullScreen;
    buttons = R_AVKON_SOFTKEYS_OPTIONS_DONE;
    form = r_mpx_cui_song_details_form;
    }

// -----------------------------------------------------------------------------
//   
//    r_mpx_cui_song_details_dialog_no_move_library
//    Dialog for getting the song info
//
// -----------------------------------------------------------------------------
//
RESOURCE DIALOG r_mpx_cui_song_details_dialog_no_move_library
    {
    flags = EAknDialogGenericFullScreen;
    buttons = R_AVKON_SOFTKEYS_OPTIONS_DONE;
    form = r_mpx_cui_song_details_form_no_move_library;
    }
#endif // __ENABLE_MSK

// -----------------------------------------------------------------------------
//   
//    r_mpx_cui_song_details_form
//
// -----------------------------------------------------------------------------
//
RESOURCE FORM r_mpx_cui_song_details_form
    {
    flags = EEikFormUseDoubleSpacedFormat;
    items =
        {
        DLG_LINE
            {
            type = EEikCtEdwin;
            prompt = qtn_nmp_song_details_name;
            id = EMPXMetadataEditorDlgCtrlIdSongName;
            itemflags=EEikDlgItemTakesEnterKey| EEikDlgItemOfferAllHotKeys;
            control = EDWIN
                {
                flags = EEikEdwinNoHorizScrolling | EEikEdwinResizable;
                width = KMPXSongDetailsTextWidth;
                lines = KMPXSongDetailsTextLines;
                maxlength = KMPXSongDetailsTextMaxLen;
                // added to limit expanding in forms.
                // If you want full screen use 6 here
                max_view_height_in_lines = 6;
                // if you have the line above, you must have this. 
                // It is calculable from LAF
                base_line_delta = 21;
                };
            },
        DLG_LINE
            {
            type = EEikCtEdwin;
            prompt = qtn_nmp_song_details_artist;
            id = EMPXMetadataEditorDlgCtrlIdArtist;
            itemflags=EEikDlgItemTakesEnterKey| EEikDlgItemOfferAllHotKeys;
            control = EDWIN
                {
                flags = EEikEdwinNoHorizScrolling | EEikEdwinResizable;
                width = KMPXSongDetailsTextWidth;
                lines = KMPXSongDetailsTextLines;
                maxlength = KMPXSongDetailsTextMaxLen;
                // added to limit expanding in forms.
                // If you want full screen use 6 here
                max_view_height_in_lines = 6;
                // if you have the line above, you must have this. 
                // It is calculable from LAF
                base_line_delta = 21;
                };
            },
        DLG_LINE
            {
            type = EEikCtEdwin;
            prompt = qtn_nmp_song_details_album;
            id = EMPXMetadataEditorDlgCtrlIdAlbum;
            itemflags=EEikDlgItemTakesEnterKey| EEikDlgItemOfferAllHotKeys;
            control = EDWIN
                {
                flags = EEikEdwinNoHorizScrolling | EEikEdwinResizable;
                width = KMPXSongDetailsTextWidth;
                lines = KMPXSongDetailsTextLines;
                maxlength = KMPXSongDetailsTextMaxLen;
                // added to limit expanding in forms.
                // If you want full screen use 6 here
                max_view_height_in_lines = 6;
                // if you have the line above, you must have this. 
                // It is calculable from LAF
                base_line_delta = 21;
                };
            },
        DLG_LINE
            {
            type = EEikCtNumberEditor;
            prompt = qtn_nmp_song_details_track_number;
            id = EMPXMetadataEditorDlgCtrlIdTrackNumber;
            itemflags = EEikDlgItemTakesEnterKey | EEikDlgItemOfferAllHotKeys;
            control = NUMBER_EDITOR
                {
                min = KMPXSongDetailsTrackNumMin;
                max = KMPXSongDetailsTrackNumMax;
                };
            },
        DLG_LINE
            {
            type = EEikCtNumberEditor;
            prompt = qtn_nmp_song_details_year;
            id = EMPXMetadataEditorDlgCtrlIdYear;
            itemflags = EEikDlgItemTakesEnterKey | EEikDlgItemOfferAllHotKeys;
            control = NUMBER_EDITOR
                {
                min = KMPXSongDetailsYearMin;
                max = KMPXSongDetailsYearMax;
                };
            },
        DLG_LINE
            {
            type = EAknCtPopupField;
            prompt = qtn_nmp_song_details_genre;
            id = EMPXMetadataEditorDlgCtrlIdGenre;
            itemflags = EEikDlgItemTakesEnterKey | EEikDlgItemOfferAllHotKeys;
            control = POPUP_FIELD
                {
                width = KMPXSongDetailsTextMaxLen;
               // other = qtn_aknexpopfield_list_other;
                };
            tooltip = qtn_aknexpopfield_hint_text;
            },
        DLG_LINE
            {
            type = EEikCtEdwin;
            prompt = qtn_nmp_song_details_composer;
            id = EMPXMetadataEditorDlgCtrlIdComposer;
            itemflags=EEikDlgItemTakesEnterKey| EEikDlgItemOfferAllHotKeys;
            control = EDWIN
                {
                flags = EEikEdwinNoHorizScrolling | EEikEdwinResizable;
                width = KMPXSongDetailsTextWidth;
                lines = KMPXSongDetailsTextLines;
                maxlength = KMPXSongDetailsTextMaxLen;
                // added to limit expanding in forms.
                // If you want full screen use 6 here
                max_view_height_in_lines = 6;
                // if you have the line above, you must have this. 
                // It is calculable from LAF
                base_line_delta = 21;
                };
            },
        DLG_LINE
            {
            type = EEikCtEdwin;
            prompt = qtn_nmp_song_details_comment;
            id = EMPXMetadataEditorDlgCtrlIdComment;
            itemflags=EEikDlgItemTakesEnterKey| EEikDlgItemOfferAllHotKeys;
            control = EDWIN
                {
                flags = EEikEdwinNoHorizScrolling | EEikEdwinResizable;
                width = KMPXSongDetailsTextWidth;
                lines = KMPXSongDetailsTextLines;
                maxlength = KMPXSongDetailsTextMaxLen;
                // added to limit expanding in forms.
                // If you want full screen use 6 here
                max_view_height_in_lines = 6;
                // if you have the line above, you must have this. 
                // It is calculable from LAF
                base_line_delta = 21;
                };
            },
        DLG_LINE
            {
            type = EAknCtPopupField;
            prompt = qtn_nmp_episode_details_library;
            id = EMPXMetadataEditorDlgCtrlIdLibrary;
            itemflags = EEikDlgItemTakesEnterKey | EEikDlgItemOfferAllHotKeys;
            control = POPUP_FIELD
                {
                width = KMPXSongDetailsTextMaxLen;
                // other = qtn_aknexpopfield_list_other;
                };
            tooltip = qtn_aknexpopfield_hint_text;
            },
	    DLG_LINE
            {
            type = EEikCtEdwin;
            prompt = qtn_mp_fd_filename;
            id = EMPXMetadataEditorDlgCtrlIdFileName;
            itemflags=EEikDlgItemTakesEnterKey| EEikDlgItemOfferAllHotKeys;
            control = EDWIN
                {
                flags = EEikEdwinNoHorizScrolling | EEikEdwinResizable| EEikEdwinReadOnly;
                width = KMPXSongDetailsTextWidth;
                lines = KMPXSongDetailsTextLines;
                maxlength = KMPXSongDetailsTextMaxLen;
                // added to limit expanding in forms.
                // If you want full screen use 6 here
                max_view_height_in_lines = 6;
                // if you have the line above, you must have this. 
                // It is calculable from LAF
                base_line_delta = 21;
                };
            },
        DLG_LINE
            {
            type = EEikCtEdwin;
            prompt = qtn_mp_details_format;
            id = EMPXMetadataEditorDlgCtrlIdFileFormat;
            itemflags=EEikDlgItemTakesEnterKey| EEikDlgItemOfferAllHotKeys;
            control = EDWIN
                {
                flags = EEikEdwinNoHorizScrolling | EEikEdwinResizable| EEikEdwinReadOnly;
                width = KMPXSongDetailsTextWidth;
                lines = KMPXSongDetailsTextLines;
                maxlength = KMPXSongDetailsTextMaxLen;
                // added to limit expanding in forms.
                // If you want full screen use 6 here
                max_view_height_in_lines = 6;
                // if you have the line above, you must have this. 
                // It is calculable from LAF
                base_line_delta = 21;
                };
            },
        DLG_LINE
            {
            type = EEikCtEdwin;
            prompt = qtn_mp_details_duration;
            id = EMPXMetadataEditorDlgCtrlIdFileDuration;
            itemflags=EEikDlgItemTakesEnterKey| EEikDlgItemOfferAllHotKeys;
            control = EDWIN
                {
                flags = EEikEdwinNoHorizScrolling | EEikEdwinResizable| EEikEdwinReadOnly;
                width = KMPXSongDetailsTextWidth;
                lines = KMPXSongDetailsTextLines;
                maxlength = KMPXSongDetailsTextMaxLen;
                // added to limit expanding in forms.
                // If you want full screen use 6 here
                max_view_height_in_lines = 6;
                // if you have the line above, you must have this. 
                // It is calculable from LAF
                base_line_delta = 21;
                };
            },
        DLG_LINE
            {
            type = EEikCtEdwin;
            prompt = qtn_mp_details_bitrate;
            id = EMPXMetadataEditorDlgCtrlIdFileBitrate;
            itemflags=EEikDlgItemTakesEnterKey| EEikDlgItemOfferAllHotKeys;
            control = EDWIN
                {
                flags = EEikEdwinNoHorizScrolling | EEikEdwinResizable| EEikEdwinReadOnly;
                width = KMPXSongDetailsTextWidth;
                lines = KMPXSongDetailsTextLines;
                maxlength = KMPXSongDetailsTextMaxLen;
                // added to limit expanding in forms.
                // If you want full screen use 6 here
                max_view_height_in_lines = 6;
                // if you have the line above, you must have this. 
                // It is calculable from LAF
                base_line_delta = 21;
                };
            },
        DLG_LINE
            {
            type = EEikCtEdwin;
            prompt = qtn_mp_details_samplerate;
            id = EMPXMetadataEditorDlgCtrlIdSamplingrate;
            itemflags=EEikDlgItemTakesEnterKey| EEikDlgItemOfferAllHotKeys;
            control = EDWIN
                {
                flags = EEikEdwinNoHorizScrolling | EEikEdwinResizable| EEikEdwinReadOnly;
                width = KMPXSongDetailsTextWidth;
                lines = KMPXSongDetailsTextLines;
                maxlength = KMPXSongDetailsTextMaxLen;
                // added to limit expanding in forms.
                // If you want full screen use 6 here
                max_view_height_in_lines = 6;
                // if you have the line above, you must have this. 
                // It is calculable from LAF
                base_line_delta = 21;
                };
            },
        DLG_LINE
            {
            type = EEikCtEdwin;
            prompt = qtn_mp_details_size;
            id = EMPXMetadataEditorDlgCtrlIdSize;
            itemflags=EEikDlgItemTakesEnterKey| EEikDlgItemOfferAllHotKeys;
            control = EDWIN
                {
                flags = EEikEdwinNoHorizScrolling | EEikEdwinResizable| EEikEdwinReadOnly;
                width = KMPXSongDetailsTextWidth;
                lines = KMPXSongDetailsTextLines;
                maxlength = KMPXSongDetailsTextMaxLen;
                // added to limit expanding in forms.
                // If you want full screen use 6 here
                max_view_height_in_lines = 6;
                // if you have the line above, you must have this. 
                // It is calculable from LAF
                base_line_delta = 21;
                };
            },
        DLG_LINE
            {
            type = EEikCtEdwin;
            prompt = qtn_mp_details_modified;
            id = EMPXMetadataEditorDlgCtrlIdLastModified;
            itemflags=EEikDlgItemTakesEnterKey| EEikDlgItemOfferAllHotKeys;
            control = EDWIN
                {
                flags = EEikEdwinNoHorizScrolling | EEikEdwinResizable| EEikEdwinReadOnly;
                width = KMPXSongDetailsTextWidth;
                lines = KMPXSongDetailsTextLines;
                maxlength = KMPXSongDetailsTextMaxLen;
                // added to limit expanding in forms.
                // If you want full screen use 6 here
                max_view_height_in_lines = 6;
                // if you have the line above, you must have this. 
                // It is calculable from LAF
                base_line_delta = 21;
                };
            },
        DLG_LINE
            {
            type = EEikCtEdwin;
            prompt = qtn_mp_details_copyright;
            id = EMPXMetadataEditorDlgCtrlIdCopyright;
            itemflags=EEikDlgItemTakesEnterKey| EEikDlgItemOfferAllHotKeys;
            control = EDWIN
                {
                flags = EEikEdwinNoHorizScrolling | EEikEdwinResizable| EEikEdwinReadOnly;
                width = KMPXSongDetailsTextWidth;
                lines = KMPXSongDetailsTextLines;
                maxlength = KMPXSongDetailsTextMaxLen;
                // added to limit expanding in forms.
                // If you want full screen use 6 here
                max_view_height_in_lines = 6;
                // if you have the line above, you must have this. 
                // It is calculable from LAF
                base_line_delta = 21;
                };
            },
        DLG_LINE
            {
            type = EEikCtEdwin;
            prompt = qtn_mp_details_url;
            id = EMPXMetadataEditorDlgCtrlIdWebaddress;
            itemflags=EEikDlgItemTakesEnterKey| EEikDlgItemOfferAllHotKeys;
            control = EDWIN
                {
                flags = EEikEdwinNoHorizScrolling | EEikEdwinResizable| EEikEdwinReadOnly;
                width = KMPXSongDetailsTextWidth;
                lines = KMPXSongDetailsTextLines;
                maxlength = KMPXSongDetailsTextMaxLen;
                // added to limit expanding in forms.
                // If you want full screen use 6 here
                max_view_height_in_lines = 6;
                // if you have the line above, you must have this. 
                // It is calculable from LAF
                base_line_delta = 21;
                };
            }
        };
    } 

// -----------------------------------------------------------------------------
//   
//    r_mpx_cui_song_details_form_no_move_library
//
// -----------------------------------------------------------------------------
//
RESOURCE FORM r_mpx_cui_song_details_form_no_move_library
    {
    flags = EEikFormUseDoubleSpacedFormat;
    items =
        {
        DLG_LINE
            {
            type = EEikCtEdwin;
            prompt = qtn_nmp_song_details_name;
            id = EMPXMetadataEditorDlgCtrlIdSongName;
            itemflags=EEikDlgItemTakesEnterKey| EEikDlgItemOfferAllHotKeys;
            control = EDWIN
                {
                flags = EEikEdwinNoHorizScrolling | EEikEdwinResizable;
                width = KMPXSongDetailsTextWidth;
                lines = KMPXSongDetailsTextLines;
                maxlength = KMPXSongDetailsTextMaxLen;
                // added to limit expanding in forms.
                // If you want full screen use 6 here
                max_view_height_in_lines = 6;
                // if you have the line above, you must have this. 
                // It is calculable from LAF
                base_line_delta = 21;
                };
            },
        DLG_LINE
            {
            type = EEikCtEdwin;
            prompt = qtn_nmp_song_details_artist;
            id = EMPXMetadataEditorDlgCtrlIdArtist;
            itemflags=EEikDlgItemTakesEnterKey| EEikDlgItemOfferAllHotKeys;
            control = EDWIN
                {
                flags = EEikEdwinNoHorizScrolling | EEikEdwinResizable;
                width = KMPXSongDetailsTextWidth;
                lines = KMPXSongDetailsTextLines;
                maxlength = KMPXSongDetailsTextMaxLen;
                // added to limit expanding in forms.
                // If you want full screen use 6 here
                max_view_height_in_lines = 6;
                // if you have the line above, you must have this. 
                // It is calculable from LAF
                base_line_delta = 21;
                };
            },
        DLG_LINE
            {
            type = EEikCtEdwin;
            prompt = qtn_nmp_song_details_album;
            id = EMPXMetadataEditorDlgCtrlIdAlbum;
            itemflags=EEikDlgItemTakesEnterKey| EEikDlgItemOfferAllHotKeys;
            control = EDWIN
                {
                flags = EEikEdwinNoHorizScrolling | EEikEdwinResizable;
                width = KMPXSongDetailsTextWidth;
                lines = KMPXSongDetailsTextLines;
                maxlength = KMPXSongDetailsTextMaxLen;
                // added to limit expanding in forms.
                // If you want full screen use 6 here
                max_view_height_in_lines = 6;
                // if you have the line above, you must have this. 
                // It is calculable from LAF
                base_line_delta = 21;
                };
            },
        DLG_LINE
            {
            type = EEikCtNumberEditor;
            prompt = qtn_nmp_song_details_track_number;
            id = EMPXMetadataEditorDlgCtrlIdTrackNumber;
            itemflags = EEikDlgItemTakesEnterKey | EEikDlgItemOfferAllHotKeys;
            control = NUMBER_EDITOR
                {
                min = KMPXSongDetailsTrackNumMin;
                max = KMPXSongDetailsTrackNumMax;
                };
            },
        DLG_LINE
            {
            type = EEikCtNumberEditor;
            prompt = qtn_nmp_song_details_year;
            id = EMPXMetadataEditorDlgCtrlIdYear;
            itemflags = EEikDlgItemTakesEnterKey | EEikDlgItemOfferAllHotKeys;
            control = NUMBER_EDITOR
                {
                min = KMPXSongDetailsYearMin;
                max = KMPXSongDetailsYearMax;
                };
            },
        DLG_LINE
            {
            type = EAknCtPopupField;
            prompt = qtn_nmp_song_details_genre;
            id = EMPXMetadataEditorDlgCtrlIdGenre;
            itemflags = EEikDlgItemTakesEnterKey | EEikDlgItemOfferAllHotKeys;
            control = POPUP_FIELD
                {
                width = KMPXSongDetailsTextMaxLen;
               // other = qtn_aknexpopfield_list_other;
                };
            tooltip = qtn_aknexpopfield_hint_text;
            },
        DLG_LINE
            {
            type = EEikCtEdwin;
            prompt = qtn_nmp_song_details_composer;
            id = EMPXMetadataEditorDlgCtrlIdComposer;
            itemflags=EEikDlgItemTakesEnterKey| EEikDlgItemOfferAllHotKeys;
            control = EDWIN
                {
                flags = EEikEdwinNoHorizScrolling | EEikEdwinResizable;
                width = KMPXSongDetailsTextWidth;
                lines = KMPXSongDetailsTextLines;
                maxlength = KMPXSongDetailsTextMaxLen;
                // added to limit expanding in forms.
                // If you want full screen use 6 here
                max_view_height_in_lines = 6;
                // if you have the line above, you must have this. 
                // It is calculable from LAF
                base_line_delta = 21;
                };
            },
        DLG_LINE
            {
            type = EEikCtEdwin;
            prompt = qtn_nmp_song_details_comment;
            id = EMPXMetadataEditorDlgCtrlIdComment;
            itemflags=EEikDlgItemTakesEnterKey| EEikDlgItemOfferAllHotKeys;
            control = EDWIN
                {
                flags = EEikEdwinNoHorizScrolling | EEikEdwinResizable;
                width = KMPXSongDetailsTextWidth;
                lines = KMPXSongDetailsTextLines;
                maxlength = KMPXSongDetailsTextMaxLen;
                // added to limit expanding in forms.
                // If you want full screen use 6 here
                max_view_height_in_lines = 6;
                // if you have the line above, you must have this. 
                // It is calculable from LAF
                base_line_delta = 21;
                };
            }
        };
    }

// -----------------------------------------------------------------------------
//
//    r_mpx_cui_song_details_episode
//    Title for metadata editor dialog for podcasts.
//
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_cui_song_details_episode
    {
    buf = qtn_mus_title_details_episode;
    }

#ifdef __ENABLE_MSK
// -----------------------------------------------------------------------------
//   
//    r_mpx_cui_podcast_details_dialog
//    Dialog for getting the podcast info
//
// -----------------------------------------------------------------------------
//
RESOURCE DIALOG r_mpx_cui_podcast_details_dialog
    {
    flags = EAknDialogGenericFullScreen;
    buttons = r_mpx_cui_song_details_softkeys_options_empty_back;
    form = r_mpx_cui_podcast_details_form;
    }
#else
// -----------------------------------------------------------------------------
//   
//    r_mpx_cui_podcast_details_dialog
//    Dialog for getting the podcast info
//
// -----------------------------------------------------------------------------
//
RESOURCE DIALOG r_mpx_cui_podcast_details_dialog
    {
    flags = EAknDialogGenericFullScreen;
    buttons = R_AVKON_SOFTKEYS_OPTIONS_DONE;
    form = r_mpx_cui_podcast_details_form;
    }
#endif // __ENABLE_MSK

// -----------------------------------------------------------------------------
//   
//    r_mpx_cui_podcast_details_form
//
// -----------------------------------------------------------------------------
//
RESOURCE FORM r_mpx_cui_podcast_details_form
    {
    flags = EEikFormUseDoubleSpacedFormat;
    items =
        {
        DLG_LINE
            {
            type = EEikCtEdwin;
            prompt = qtn_nmp_episode_details_name;
            id = EMPXMetadataEditorDlgCtrlIdSongName;
            itemflags=EEikDlgItemTakesEnterKey| EEikDlgItemOfferAllHotKeys;
            control = EDWIN
                {
                flags = EEikEdwinNoHorizScrolling | EEikEdwinResizable;
                width = KMPXSongDetailsTextWidth;
                lines = KMPXSongDetailsTextLines;
                maxlength = KMPXSongDetailsTextMaxLen;
                // added to limit expanding in forms.
                // If you want full screen use 6 here
                max_view_height_in_lines = 6;
                // if you have the line above, you must have this. 
                // It is calculable from LAF
                base_line_delta = 21;
                };
            },
        DLG_LINE
            {
            type = EEikCtEdwin;
            prompt = qtn_nmp_episode_details_author;
            id = EMPXMetadataEditorDlgCtrlIdArtist;
            itemflags=EEikDlgItemTakesEnterKey| EEikDlgItemOfferAllHotKeys;
            control = EDWIN
                {
                flags = EEikEdwinNoHorizScrolling | EEikEdwinResizable;
                width = KMPXSongDetailsTextWidth;
                lines = KMPXSongDetailsTextLines;
                maxlength = KMPXSongDetailsTextMaxLen;
                // added to limit expanding in forms.
                // If you want full screen use 6 here
                max_view_height_in_lines = 6;
                // if you have the line above, you must have this. 
                // It is calculable from LAF
                base_line_delta = 21;
                };
            },
        DLG_LINE
            {
            type = EEikCtEdwin;
            prompt = qtn_nmp_episode_details_title;
            id = EMPXMetadataEditorDlgCtrlIdAlbum;
            itemflags=EEikDlgItemTakesEnterKey| EEikDlgItemOfferAllHotKeys;
            control = EDWIN
                {
                flags = EEikEdwinNoHorizScrolling | EEikEdwinResizable;
                width = KMPXSongDetailsTextWidth;
                lines = KMPXSongDetailsTextLines;
                maxlength = KMPXSongDetailsTextMaxLen;
                // added to limit expanding in forms.
                // If you want full screen use 6 here
                max_view_height_in_lines = 6;
                // if you have the line above, you must have this. 
                // It is calculable from LAF
                base_line_delta = 21;
                };
            },        
        DLG_LINE
            {
            type = EEikCtNumberEditor;
            prompt = qtn_nmp_song_details_episode_number;
            id = EMPXMetadataEditorDlgCtrlIdTrackNumber;
            itemflags = EEikDlgItemTakesEnterKey | EEikDlgItemOfferAllHotKeys;
            control = NUMBER_EDITOR
                {
                min = KMPXSongDetailsTrackNumMin;
                max = KMPXSongDetailsTrackNumMax;
                };
            },
        DLG_LINE
            {
            type = EEikCtNumberEditor;
            prompt = qtn_nmp_song_details_year;
            id = EMPXMetadataEditorDlgCtrlIdYear;
            itemflags = EEikDlgItemTakesEnterKey | EEikDlgItemOfferAllHotKeys;
            control = NUMBER_EDITOR
                {
                min = KMPXSongDetailsYearMin;
                max = KMPXSongDetailsYearMax;
                };
            },
        DLG_LINE
            {
            type = EAknCtPopupField;
            prompt = qtn_nmp_episode_details_genre;
            id = EMPXMetadataEditorDlgCtrlIdGenre;
            itemflags = EEikDlgItemTakesEnterKey | EEikDlgItemOfferAllHotKeys;
            control = POPUP_FIELD
                {
                width = KMPXSongDetailsTextMaxLen;
               // other = qtn_aknexpopfield_list_other;
                };
            tooltip = qtn_aknexpopfield_hint_text;
            },                    
        DLG_LINE
            {
            type = EEikCtEdwin;
            prompt = qtn_nmp_song_details_comment;
            id = EMPXMetadataEditorDlgCtrlIdComment;
            itemflags=EEikDlgItemTakesEnterKey| EEikDlgItemOfferAllHotKeys;
            control = EDWIN
                {
                flags = EEikEdwinNoHorizScrolling | EEikEdwinResizable;
                width = KMPXSongDetailsTextWidth;
                lines = KMPXSongDetailsTextLines;
                maxlength = KMPXSongDetailsTextMaxLen;
                // added to limit expanding in forms.
                // If you want full screen use 6 here
                max_view_height_in_lines = 6;
                // if you have the line above, you must have this. 
                // It is calculable from LAF
                base_line_delta = 21;
                };
            },
        DLG_LINE
            {
            type = EAknCtPopupField;
            prompt = qtn_nmp_episode_details_library;
            id = EMPXMetadataEditorDlgCtrlIdLibrary;
            itemflags = EEikDlgItemTakesEnterKey | EEikDlgItemOfferAllHotKeys;
            control = POPUP_FIELD
                {
                width = KMPXSongDetailsTextMaxLen;
                // other = qtn_aknexpopfield_list_other;
                };
            tooltip = qtn_aknexpopfield_hint_text;
            },
	    DLG_LINE
                {
                type = EEikCtEdwin;
                prompt = qtn_mp_fd_filename;
                id = EMPXMetadataEditorDlgCtrlIdFileName;
                itemflags=EEikDlgItemTakesEnterKey| EEikDlgItemOfferAllHotKeys;
                control = EDWIN
                    {
                    flags = EEikEdwinNoHorizScrolling | EEikEdwinResizable;
                    width = KMPXSongDetailsTextWidth;
                    lines = KMPXSongDetailsTextLines;
                    maxlength = KMPXSongDetailsTextMaxLen;
                    // added to limit expanding in forms.
                    // If you want full screen use 6 here
                    max_view_height_in_lines = 6;
                    // if you have the line above, you must have this. 
                    // It is calculable from LAF
                    base_line_delta = 21;
                    };
                },
		DLG_LINE
            {
            type = EEikCtEdwin;
            prompt = qtn_mp_details_format;
            id = EMPXMetadataEditorDlgCtrlIdFileFormat;
            itemflags=EEikDlgItemTakesEnterKey| EEikDlgItemOfferAllHotKeys;
            control = EDWIN
                {
                flags = EEikEdwinNoHorizScrolling | EEikEdwinResizable| EEikEdwinReadOnly;
                width = KMPXSongDetailsTextWidth;
                lines = KMPXSongDetailsTextLines;
                maxlength = KMPXSongDetailsTextMaxLen;
                // added to limit expanding in forms.
                // If you want full screen use 6 here
                max_view_height_in_lines = 6;
                // if you have the line above, you must have this. 
                // It is calculable from LAF
                base_line_delta = 21;
                };
            },
	    DLG_LINE
            {
            type = EEikCtEdwin;
            prompt = qtn_mp_details_duration;
            id = EMPXMetadataEditorDlgCtrlIdFileDuration;
            itemflags=EEikDlgItemTakesEnterKey| EEikDlgItemOfferAllHotKeys;
            control = EDWIN
                {
                flags = EEikEdwinNoHorizScrolling | EEikEdwinResizable| EEikEdwinReadOnly;
                width = KMPXSongDetailsTextWidth;
                lines = KMPXSongDetailsTextLines;
                maxlength = KMPXSongDetailsTextMaxLen;
                // added to limit expanding in forms.
                // If you want full screen use 6 here
                max_view_height_in_lines = 6;
                // if you have the line above, you must have this. 
                // It is calculable from LAF
                base_line_delta = 21;
                };
            },
	    DLG_LINE
            {
            type = EEikCtEdwin;
            prompt = qtn_mp_details_bitrate;
            id = EMPXMetadataEditorDlgCtrlIdFileBitrate;
            itemflags=EEikDlgItemTakesEnterKey| EEikDlgItemOfferAllHotKeys;
            control = EDWIN
                {
                flags = EEikEdwinNoHorizScrolling | EEikEdwinResizable| EEikEdwinReadOnly;
                width = KMPXSongDetailsTextWidth;
                lines = KMPXSongDetailsTextLines;
                maxlength = KMPXSongDetailsTextMaxLen;
                // added to limit expanding in forms.
                // If you want full screen use 6 here
                max_view_height_in_lines = 6;
                // if you have the line above, you must have this. 
                // It is calculable from LAF
                base_line_delta = 21;
                };
            },
        DLG_LINE
            {
            type = EEikCtEdwin;
            prompt = qtn_mp_details_samplerate;
            id = EMPXMetadataEditorDlgCtrlIdSamplingrate;
            itemflags=EEikDlgItemTakesEnterKey| EEikDlgItemOfferAllHotKeys;
            control = EDWIN
                {
                flags = EEikEdwinNoHorizScrolling | EEikEdwinResizable| EEikEdwinReadOnly;
                width = KMPXSongDetailsTextWidth;
                lines = KMPXSongDetailsTextLines;
                maxlength = KMPXSongDetailsTextMaxLen;
                // added to limit expanding in forms.
                // If you want full screen use 6 here
                max_view_height_in_lines = 6;
                // if you have the line above, you must have this. 
                // It is calculable from LAF
                base_line_delta = 21;
                };
            },
        DLG_LINE
            {
            type = EEikCtEdwin;
            prompt = qtn_mp_details_size;
            id = EMPXMetadataEditorDlgCtrlIdSize;
            itemflags=EEikDlgItemTakesEnterKey| EEikDlgItemOfferAllHotKeys;
            control = EDWIN
                {
                flags = EEikEdwinNoHorizScrolling | EEikEdwinResizable| EEikEdwinReadOnly;
                width = KMPXSongDetailsTextWidth;
                lines = KMPXSongDetailsTextLines;
                maxlength = KMPXSongDetailsTextMaxLen;
                // added to limit expanding in forms.
                // If you want full screen use 6 here
                max_view_height_in_lines = 6;
                // if you have the line above, you must have this. 
                // It is calculable from LAF
                base_line_delta = 21;
                };
            },
        DLG_LINE
            {
            type = EEikCtEdwin;
            prompt = qtn_mp_details_modified;
            id = EMPXMetadataEditorDlgCtrlIdLastModified;
            itemflags=EEikDlgItemTakesEnterKey| EEikDlgItemOfferAllHotKeys;
            control = EDWIN
                {
                flags = EEikEdwinNoHorizScrolling | EEikEdwinResizable| EEikEdwinReadOnly;
                width = KMPXSongDetailsTextWidth;
                lines = KMPXSongDetailsTextLines;
                maxlength = KMPXSongDetailsTextMaxLen;
                // added to limit expanding in forms.
                // If you want full screen use 6 here
                max_view_height_in_lines = 6;
                // if you have the line above, you must have this. 
                // It is calculable from LAF
                base_line_delta = 21;
                };
            },
        DLG_LINE
            {
            type = EEikCtEdwin;
            prompt = qtn_mp_details_copyright;
            id = EMPXMetadataEditorDlgCtrlIdCopyright;
            itemflags=EEikDlgItemTakesEnterKey| EEikDlgItemOfferAllHotKeys;
            control = EDWIN
                {
                flags = EEikEdwinNoHorizScrolling | EEikEdwinResizable| EEikEdwinReadOnly;
                width = KMPXSongDetailsTextWidth;
                lines = KMPXSongDetailsTextLines;
                maxlength = KMPXSongDetailsTextMaxLen;
                // added to limit expanding in forms.
                // If you want full screen use 6 here
                max_view_height_in_lines = 6;
                // if you have the line above, you must have this. 
                // It is calculable from LAF
                base_line_delta = 21;
                };
            },
        DLG_LINE
            {
            type = EEikCtEdwin;
            prompt = qtn_mp_details_url;
            id = EMPXMetadataEditorDlgCtrlIdWebaddress;
            itemflags=EEikDlgItemTakesEnterKey| EEikDlgItemOfferAllHotKeys;
            control = EDWIN
                {
                flags = EEikEdwinNoHorizScrolling | EEikEdwinResizable| EEikEdwinReadOnly;
                width = KMPXSongDetailsTextWidth;
                lines = KMPXSongDetailsTextLines;
                maxlength = KMPXSongDetailsTextMaxLen;
                // added to limit expanding in forms.
                // If you want full screen use 6 here
                max_view_height_in_lines = 6;
                // if you have the line above, you must have this. 
                // It is calculable from LAF
                base_line_delta = 21;
                };
            } 
        };
    } 

// -----------------------------------------------------------------------------
//   
//    r_mpx_cui_fd_title
//    Text used for File Details title.
//
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_cui_fd_title
    {
    buf = qtn_mus_title_file_details_track;
    }

// -----------------------------------------------------------------------------
//
//    r_mpx_cui_metadataeditor_file_details_row_format
//
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_cui_metadataeditor_file_details_row_format
    {
    buf = "%0U\t%1U"; 
    }

// -----------------------------------------------------------------------------
//
//    r_mpx_cui_metadataeditor_bitrate_txt
//    File Details Bitrate Text.
//
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_cui_metadataeditor_bitrate_txt
    {
    buf = qtn_mp_bitrate_kbps;
    }

// -----------------------------------------------------------------------------
//
//    r_mpx_cui_metadataeditor_samplingrate_txt
//    File details sampling rate text.
//
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_cui_metadataeditor_samplingrate_txt
    {
    buf = qtn_mp_sr_value;
    }

// -----------------------------------------------------------------------------
//   
//    r_mpx_cui_custom_genre_rename_text
//    Prompt Text for rename genre.
//
// -----------------------------------------------------------------------------
//    
RESOURCE TBUF r_mpx_cui_custom_genre_rename_text
    {
    buf = qtn_nmp_prmpt_custom_genre;
    }

// -----------------------------------------------------------------------------
//   
//    r_mpx_cui_custom_category_rename_text
//    Prompt Text for rename category.
//
// -----------------------------------------------------------------------------
//    
RESOURCE TBUF r_mpx_cui_custom_category_rename_text
    {
    buf = qtn_nmp_prmpt_custom_category;
    }

// -----------------------------------------------------------------------------
//
//    r_mpx_cui_custom_genre_name_query_dlg
//    Query dialog for custom genre name.
//
// -----------------------------------------------------------------------------
//
RESOURCE DIALOG r_mpx_cui_custom_genre_name_query_dlg
    {
    flags=EGeneralQueryFlags; 
    buttons = R_AVKON_SOFTKEYS_OK_CANCEL;
    items =
        {
        DLG_LINE
            {
            type = EAknCtQuery;
            id = EGeneralQuery;
            control = AVKON_DATA_QUERY
                {
                layout = EDataLayout;
                control = 
                    EDWIN
                        {
                        flags = EEikEdwinNoWrap;
                        width = KMPXSongDetailsTextMaxLen;
                        lines = 1;
                        maxlength = KMPXSongDetailsTextMaxLen;
                        };
                };
            }
        };
    }

// -----------------------------------------------------------------------------
//
//    r_mpx_cui_custom_genre_prompt_text
//
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_cui_custom_genre_prompt_text
    {
    buf = qtn_nmp_genre_custom_selection;
    }

// -----------------------------------------------------------------------------
//
//    r_mpx_cui_podcast_custom_genre_prompt_text
//
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_cui_podcast_custom_genre_prompt_text
    {
    buf = qtn_nmp_genre_custom_podcst_selection;
    }
    
// -----------------------------------------------------------------------------
//
//    r_mpx_cui_unknown_genre_text
//
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_cui_unknown_genre_text
    {
    buf = qtn_nmp_genre_unknown;
    }

// -----------------------------------------------------------------------------
//
//    r_mpx_cui_genre_selection_music_text
//
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_cui_genre_selection_music_text
    {
    buf = qtn_nmp_genre_selection_music;
    }

// -----------------------------------------------------------------------------
//
//    r_mpx_cui_genre_selection_podcast_text
//
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_cui_genre_selection_podcast_text
    {
    buf = qtn_nmp_genre_selection_podcast;
    }

// -----------------------------------------------------------------------------
//    
//    r_mpx_cui_fd_headings_songs
//    Headings for Songs File Details popup.
//
// -----------------------------------------------------------------------------
//
RESOURCE ARRAY r_mpx_cui_fd_headings_songs
    {
    items =
        {
        LBUF
            {
            txt = qtn_mp_fd_filename;
            },
        LBUF
            {
            txt = qtn_mp_details_format;
            },
        LBUF
            {
            txt = qtn_mp_details_duration;
            },
        LBUF
            {
            txt = qtn_mp_details_bitrate;
            },
        LBUF
            {
            txt = qtn_mp_details_samplerate;
            },
        LBUF
            {
            txt = qtn_mp_details_size;
            },
        LBUF
            {
            txt = qtn_mp_details_modified;
            },
        LBUF
            {
            txt = qtn_mp_details_copyright;
            },
        LBUF
            {
            txt = qtn_mp_details_url;
            }
        };
    }

// -----------------------------------------------------------------------------
//    
//    r_mpx_cui_fd_headings_podcasts
//    Headings for Podcast File Details popup.
//
// -----------------------------------------------------------------------------
//
RESOURCE ARRAY r_mpx_cui_fd_headings_podcasts
    {
    items =
        {
        LBUF
            {
            txt = qtn_mp_fd_filename;
            },
        LBUF
            {
            txt = qtn_mp_details_format;
            },
        LBUF
            {
            txt = qtn_mp_details_duration;
            },
        LBUF
            {
            txt = qtn_mp_details_bitrate;
            },
        LBUF
            {
            txt = qtn_mp_details_samplerate;
            },
        LBUF
            {
            txt = qtn_mp_details_size;
            },
        LBUF
            {
            txt = qtn_mp_details_last_playback_position;
            },
        LBUF
            {
            txt = qtn_mp_details_published;
            },
        LBUF
            {
            txt = qtn_mp_details_modified;
            },
        LBUF
            {
            txt = qtn_mp_details_copyright;
            },
        LBUF
            {
            txt = qtn_mp_details_url;
            }
        };
    }

// -----------------------------------------------------------------------------
//   
//    r_mpx_cui_move_to_library_confirmation_query
//    Confirmation query dialog for move to a different library.
//
// -----------------------------------------------------------------------------
// 
RESOURCE DIALOG r_mpx_cui_move_to_library_confirmation_query
    {
    flags = EGeneralQueryFlags;
    buttons = R_AVKON_SOFTKEYS_YES_NO;
    items =
        {
        DLG_LINE
            {
            type = EAknCtQuery;
            id = EGeneralQuery;
            control= AVKON_CONFIRMATION_QUERY 
                { 
                layout = EConfirmationQueryLayout;
                };
            }
        };
    }

// -----------------------------------------------------------------------------
//   
//    r_mpx_music_genre_strings
//    default genre list for music library.
//
// -----------------------------------------------------------------------------
// 
RESOURCE ARRAY r_mpx_music_genre_strings
    {
    items =
        {
        LBUF {txt = qtn_nmp_genre_alternative;},
        LBUF {txt = qtn_nmp_genre_blues;},
        LBUF {txt = qtn_nmp_genre_classical;},
        LBUF {txt = qtn_nmp_genre_country;},
        LBUF {txt = qtn_nmp_genre_dance;},
        LBUF {txt = qtn_nmp_genre_easylistening;},
        LBUF {txt = qtn_nmp_genre_electronic;},
        LBUF {txt = qtn_nmp_genre_folk;},
        LBUF {txt = qtn_nmp_genre_hiphop;},
        LBUF {txt = qtn_nmp_genre_jazz;},
        LBUF {txt = qtn_nmp_genre_latin;},
        LBUF {txt = qtn_nmp_genre_metal;},
        LBUF {txt = qtn_nmp_genre_newage;},
        LBUF {txt = qtn_nmp_genre_other;},
        LBUF {txt = qtn_nmp_genre_pop;},
        LBUF {txt = qtn_nmp_genre_rb;},
        LBUF {txt = qtn_nmp_genre_rap;},
        LBUF {txt = qtn_nmp_genre_reggae;},
        LBUF {txt = qtn_nmp_genre_rock;},
        LBUF {txt = qtn_nmp_genre_soundtrack;},
        LBUF {txt = qtn_nmp_genre_spoken;},
        LBUF {txt = qtn_nmp_genre_world;}
        };
    }

// -----------------------------------------------------------------------------
//   
//    r_mpx_music_genre_strings_podcast
//    default genre list for music library, contains podcasting as an item
//
// -----------------------------------------------------------------------------
// 
RESOURCE ARRAY r_mpx_music_genre_strings_podcast
    {
    items =
        {
        LBUF {txt = qtn_nmp_genre_alternative;},
        LBUF {txt = qtn_nmp_genre_blues;},
        LBUF {txt = qtn_nmp_genre_classical;},
        LBUF {txt = qtn_nmp_genre_country;},
        LBUF {txt = qtn_nmp_genre_dance;},
        LBUF {txt = qtn_nmp_genre_easylistening;},
        LBUF {txt = qtn_nmp_genre_electronic;},
        LBUF {txt = qtn_nmp_genre_folk;},
        LBUF {txt = qtn_nmp_genre_hiphop;},
        LBUF {txt = qtn_nmp_genre_jazz;},
        LBUF {txt = qtn_nmp_genre_latin;},
        LBUF {txt = qtn_nmp_genre_metal;},
        LBUF {txt = qtn_nmp_genre_newage;},
        LBUF {txt = qtn_nmp_genre_other;},
        LBUF {txt = qtn_nmp_genre_podcast;},
        LBUF {txt = qtn_nmp_genre_pop;},
        LBUF {txt = qtn_nmp_genre_rb;},
        LBUF {txt = qtn_nmp_genre_rap;},
        LBUF {txt = qtn_nmp_genre_reggae;},
        LBUF {txt = qtn_nmp_genre_rock;},
        LBUF {txt = qtn_nmp_genre_soundtrack;},
        LBUF {txt = qtn_nmp_genre_spoken;},
        LBUF {txt = qtn_nmp_genre_world;}
        };
    }

// -----------------------------------------------------------------------------
//   
//    r_mpx_podcast_category_strings
//    default category list for podcast.
//
// -----------------------------------------------------------------------------
// 
RESOURCE ARRAY r_mpx_podcast_category_strings
    {
    items =
        {
        LBUF {txt = qtn_nmp_category_arts;},
        LBUF {txt = qtn_nmp_category_business;},
        LBUF {txt = qtn_nmp_category_comedy;},
        LBUF {txt = qtn_nmp_category_education;},
        LBUF {txt = qtn_nmp_category_games_hobbies;},
        LBUF {txt = qtn_nmp_category_government_organizations;},
        LBUF {txt = qtn_nmp_category_health;},
        LBUF {txt = qtn_nmp_category_kids_family;},
        LBUF {txt = qtn_nmp_category_music;},
        LBUF {txt = qtn_nmp_category_news_politics;},
        LBUF {txt = qtn_nmp_category_religion_spirituality;},
        LBUF {txt = qtn_nmp_category_science_medicine;},
        LBUF {txt = qtn_nmp_category_society_culture;},
        LBUF {txt = qtn_nmp_category_sports_recreation;},
        LBUF {txt = qtn_nmp_category_technology;},
        LBUF {txt = qtn_nmp_category_tv_film;}
        };
    }

// -----------------------------------------------------------------------------
//
//    r_mpx_qtn_nmp_genre_podcast
//
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_qtn_nmp_genre_podcast
    {
    buf = qtn_nmp_genre_podcast;
    }

// -----------------------------------------------------------------------------
//   
//    r_mpx_cui_query_move_to_library
//    confirmation text for move to a different library.
//
// -----------------------------------------------------------------------------
//    
RESOURCE TBUF r_mpx_cui_query_move_to_library
    {
    buf = qtn_nmp_query_move_to_library;
    }    
    
// -----------------------------------------------------------------------------
//
//    r_mpx_cui_metadataeditor_playback_complete
//
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_cui_metadataeditor_playback_complete
    {
    
    buf = qtn_mp_details_playback_complete;
    }

RESOURCE DLG_LINE r_mpx_cui_last_playback_position
     {
     type=EEikCtEdwin;
     prompt = qtn_mp_details_last_playback_position ;
     id= EMPXMetadataEditorDlgCtrlIdLastPlayedPosition ;
     //control=EDWIN { flags= KMultiLineExpandingEditorFlags; maxlength=168; width=3; lines=1;};
     control = EDWIN
                         {
                         flags = EEikEdwinNoHorizScrolling | EEikEdwinResizable;
                         width = KMPXSongDetailsTextWidth;
                         lines = KMPXSongDetailsTextLines;
                         maxlength = KMPXSongDetailsTextMaxLen;
                         // added to limit expanding in forms.
                         // If you want full screen use 6 here
                         max_view_height_in_lines = 6;
                         // if you have the line above, you must have this. 
                         // It is calculable from LAF
                         base_line_delta = 21;
                         };
     }

RESOURCE DLG_LINE r_mpx_cui_details_published
     {
     type=EEikCtEdwin;
     prompt = qtn_mp_details_published ;
     id= EMPXMetadataEditorDlgCtrlIdLastPublished ;
     //control=EDWIN { flags= KMultiLineExpandingEditorFlags; maxlength=168; width=3; lines=1;};
     control = EDWIN
                         {
                         flags = EEikEdwinNoHorizScrolling | EEikEdwinResizable;
                         width = KMPXSongDetailsTextWidth;
                         lines = KMPXSongDetailsTextLines;
                         maxlength = KMPXSongDetailsTextMaxLen;
                         // added to limit expanding in forms.
                         // If you want full screen use 6 here
                         max_view_height_in_lines = 6;
                         // if you have the line above, you must have this. 
                         // It is calculable from LAF
                         base_line_delta = 21;
                         };
     }

// End of File
