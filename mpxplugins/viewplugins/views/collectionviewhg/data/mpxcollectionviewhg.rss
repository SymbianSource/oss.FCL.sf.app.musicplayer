/*
* Copyright (c) 2006 Nokia Corporation and/or its subsidiary(-ies).
* All rights reserved.
* This component and the accompanying materials are made available
* under the terms of "Eclipse Public License v1.0"
* which accompanies this distribution, and is available
* at the URL "http://www.eclipse.org/legal/epl-v10.html".
*
* Initial Contributors:
* Nokia Corporation - initial contribution.
*
* Contributors:
*
* Description:  Resource definitions for project mpxcollectionviewhg
*
*/



// RESOURCE NAME IDENTIFIER
NAME    MCCV // 4 letter ID

// INCLUDES
#include <avkon.rsg>
#include <avkon.rh>
#include <avkon.loc>
#include <eikon.rh>
#include <avkon.mbg>
#include <CommonDialogs.hrh> 
#include <CommonDialogs.rh> 
#include <bldvariant.hrh>
#include <pathconfiguration.hrh>

#include <AiwCommon.hrh>
#include <AiwCommon.rh>

#include <mpxappui.hrh>
#include <mpxcommonui.loc>
#include <mpxcommoncontainer.loc>
#include <mpxcollectionviewhg.loc>
#include "mpxcollectionviewhg.hrh"


// RESOURCE IDENTIFIER
RESOURCE RSS_SIGNATURE { }

RESOURCE TBUF 
    {
    buf = "";
    }


// RESOURCE DEFINITIONS 

// ---------------------------------------------------------------------------
// r_mpx_collection_view
// Collection view information resource.
// ---------------------------------------------------------------------------
//
RESOURCE AVKON_VIEW r_mpx_collection_view
    {
    menubar = r_mpx_collection_view_menubar;
    cba = R_AVKON_SOFTKEYS_OPTIONS_BACK;
    }

// ---------------------------------------------------------------------------
// r_mpx_collection_view_menubar_music_menu
// Collection view main music menu bar.
// ---------------------------------------------------------------------------
//
RESOURCE MENU_BAR r_mpx_collection_view_menubar_music_menu
    {
    titles =
        {
        MENU_TITLE 
            {
            menu_pane = r_mpx_collection_view_music_menu;
            }
        };
    }

// ---------------------------------------------------------------------------
// r_mpx_collection_view_menubar_embedded_playlist_view
// Collection view menu bar for embedded playlist view.
// ---------------------------------------------------------------------------
//
RESOURCE MENU_BAR r_mpx_collection_view_menubar_embedded_playlist_view
    {
    titles =
        {
        MENU_TITLE 
            {
            menu_pane = r_mpx_collection_view_embedded_playlist_view;
            }
        };
    }

// ---------------------------------------------------------------------------
// r_mpx_collection_view_menubar_no_marking
// Collection view menu bar without marking.
// ---------------------------------------------------------------------------
//
RESOURCE MENU_BAR r_mpx_collection_view_menubar_no_marking
    {
    titles =
        {
        MENU_TITLE 
            {
            menu_pane = r_mpx_collection_view_menu_2;
            },
        MENU_TITLE
            {
            menu_pane = r_mpx_collection_view_menu_1;
            }
        };
    }

// ---------------------------------------------------------------------------
// r_mpx_collection_view_menubar
// Collection view menu bar.
// ---------------------------------------------------------------------------
//
RESOURCE MENU_BAR r_mpx_collection_view_menubar
    {
    titles =
        {
        MENU_TITLE 
            {
            menu_pane = r_mpx_collection_view_menu_2;
            },
        MENU_TITLE 
            {
            menu_pane = R_AVKON_MENUPANE_MARKABLE_LIST;
            },
        MENU_TITLE
            {
            menu_pane = r_mpx_collection_view_menu_1;
            }
        };
    }

// ---------------------------------------------------------------------------
// r_mpx_collection_view_menu_1
// Collection view menu items.
// ---------------------------------------------------------------------------
//
RESOURCE MENU_PANE r_mpx_collection_view_menu_1
    {
    items=
        {
        MENU_ITEM
            {
            command = EMPXCmdGoToNowPlaying;
            txt = qtn_mus_options_nowplaying;
            },
        MENU_ITEM
            {
            command = EMPXCmdCreatePlaylist;
            txt = qtn_mg_options_create_new_pl;
            },    
        MENU_ITEM
            {
            command = EMPXCmdGoToArtistAlbums;
            txt = qtn_mus_options_artists_and_albums;
            },
        MENU_ITEM
            {
            command = EMPXCmdGoToAllSongs;
            txt = qtn_mus_options_songs;
            },
        MENU_ITEM
            {
            command = EMPXCmdGoToPlaylists;
            txt = qtn_mus_options_playlists;
            },            
        MENU_ITEM
            {
            command = EMPXCmdGoToGenre;
            txt = qtn_mus_options_genres;
            },
        MENU_ITEM
            {
            command = EMPXCmdGoToPodcasts;
            txt = qtn_mus_options_podcasts;
            },                        
        MENU_ITEM
            {
            command = EMPXCmdGoToMusicShop;
            txt = qtn_nmp_options_go_to_shop;
            },
        MENU_ITEM
            {
            command = EMPXCmdGoToMultipleMusicShop;
            txt = qtn_nmp_options_go_to_shop;
            cascade = r_mpx_playback_collection_musicshop_sub_menu;
            },                    
        MENU_ITEM
            {
            command = EMPXCmdMusicLibraryDetails;
            txt = qtn_mus_options_details_library;
            },
        MENU_ITEM
            {
            command = EMPXCmdRefreshLibrary;
            txt = qtn_mus_options_update_collection1;
            },
	MENU_ITEM
            {
            command = EMPXCmdAbout;
            txt = qtn_mus_options_about;
            },
        MENU_ITEM
            {
            command = EMPXCmdPlayItem;
            txt = qtn_mus_options_play;
            flags = EEikMenuItemSpecific;
            },
        MENU_ITEM
            {
            command = EMPXCmdFind;
            txt = qtn_options_find;
            },
        MENU_ITEM
            {
            command = EMPXCmdAddToPlaylist;
            txt = qtn_mus_options_add_to_pl;
            cascade = r_mpx_add_to_pl_sub_menu;
            flags = EEikMenuItemSpecificListQuery;
            },
        MENU_ITEM
            { 
            command = EMPXCmdUpnpPlayVia;
            txt = qtn_nmp_options_play_via;
            cascade = r_mpx_collection_play_via_sub_menu; 
            },    
        MENU_ITEM
            {
            command = EMPXCmdAddSongs;
            txt = qtn_mus_options_add_tracks;
            },
        MENU_ITEM
            {
            command = EMPXCmdReorder;
            txt = qtn_nmp_options_reorder_list;
            },
        MENU_ITEM
            {
            command = EMPXCmdSend;
            txt = qtn_options_send_via;
            flags = EEikMenuItemSpecific;
            },
        MENU_ITEM
            {
            command = EMPXCmdUPnPAiwCmdCopyToExternalCriteria;
            txt = "(copy to ext)";
            },
        MENU_ITEM
            {
            command = EMPXCmdDelete;
            txt = qtn_mus_options_delete;
            flags = EEikMenuItemSpecific;
            },
        MENU_ITEM
            {
            command = EMPXCmdRemove;
            txt = qtn_mp_options_remove;
            flags = EEikMenuItemSpecific;
            }
        };
    }

// ---------------------------------------------------------------------------
// r_mpx_collection_view_menu_2
// Collection view menu items.
// ---------------------------------------------------------------------------
//
RESOURCE MENU_PANE r_mpx_collection_view_menu_2
    {
    items=
        {
        MENU_ITEM
            {
            command = EMPXCmdUseAsCascade;
            txt = qtn_mus_options_use_tone_as;
            cascade = r_mpx_use_as_cascade;
            flags = EEikMenuItemSpecificListQuery;
            },
        MENU_ITEM
            {
            command = EMPXCmdSongDetails;
            txt = qtn_mus_options_details_track;
            flags = EEikMenuItemSpecific;
            },
        MENU_ITEM
            {
            command = EMPXCmdRename;
            txt = qtn_nmp_options_rename;
            flags = EEikMenuItemSpecific;
            },
        MENU_ITEM
            {
            command = EMPXCmdAlbumArt;
            txt = qtn_nmp_options_album_art;
            },
        MENU_ITEM
            {
            command = EMPXCmdFindInMusicShop;
            txt = qtn_nmp_find_in_musicshop;
            flags = EEikMenuItemSpecific;            
            },
        MENU_ITEM
            {
            command = EMPXCmdPlaylistDetails;
            txt = qtn_mus_options_details_pl;
            flags = EEikMenuItemSpecific;            
            },
        MENU_ITEM
            {
            command = EAknCmdHelp;
            txt = qtn_options_help;
            },
        MENU_ITEM
            {
            command = EAknCmdExit;
            txt = qtn_options_exit;
            }
        };
    }

// ---------------------------------------------------------------------------
// r_mpx_collection_view_music_menu
// Collection view menu items.
// ---------------------------------------------------------------------------
//
RESOURCE MENU_PANE r_mpx_collection_view_music_menu
    {
    items=
        {
        MENU_ITEM
            {
            command = EMPXCmdGoToNowPlaying;
            txt = qtn_nmp_options_go_to_nowplaying;
            },

#ifdef __ENABLE_PODCAST_IN_MUSIC_MENU                
        MENU_ITEM
            {
            command = EMPXCmdRefreshLibrary;
            txt = qtn_mus_options_update_collection1;
            },    
#endif            
        MENU_ITEM
            {
            command = EMPXCmdGoToMusicShop;
            txt = qtn_nmp_options_go_to_shop;
            },
        MENU_ITEM
            { 
            command = EMPXCmdGoToMultipleMusicShop;
            txt = qtn_nmp_options_go_to_shop;
            cascade = r_mpx_playback_collection_musicshop_sub_menu; 
            },                
        MENU_ITEM
            {
            command = EMPXCmdMusicLibraryDetails;
            txt = qtn_mus_options_details_library;
            },
        MENU_ITEM
            {
            command = EAknCmdHelp;
            txt = qtn_options_help;
            },
        MENU_ITEM
            {
            command = EAknCmdExit;
            txt = qtn_options_exit;
            }
        };
    }

// ---------------------------------------------------------------------------
// r_mpx_collection_view_embedded_playlist_view
// Collection view menu items for embedded playlist view.
// ---------------------------------------------------------------------------
//
RESOURCE MENU_PANE r_mpx_collection_view_embedded_playlist_view
    {
    items=
        {
        MENU_ITEM
            {
            command = EMPXCmdSavePlaylist;
            txt = qtn_mp_options_save;
            },
        MENU_ITEM
            {
            command = EMPXCmdFindInMusicShop;
            txt = qtn_nmp_find_in_musicshop;
            },
        MENU_ITEM
            {
            command = EAknCmdHelp;
            txt = qtn_options_help;
            },
        MENU_ITEM
            {
            command = EAknCmdExit;
            txt = qtn_options_exit;
            }
        };
    }

// ---------------------------------------------------------------------------
// r_mpx_add_to_pl_sub_menu
// ---------------------------------------------------------------------------
//
RESOURCE MENU_PANE r_mpx_add_to_pl_sub_menu
    {
    items = 
        {
        MENU_ITEM
            {
            command = EMPXCmdAddToSavedPlaylist;
            txt = qtn_nmp_sub_add_to_playlist_saved;
            },
        MENU_ITEM
            { 
            command = EMPXCmdAddToNewPlaylist;
            txt = qtn_nmp_sub_add_to_playlist_new; 
            }
        };
    }

// ---------------------------------------------------------------------------
// r_mpx_playback_collection_via_sub_menu
// Collection view UPnP Play Via sub menu items.
// ---------------------------------------------------------------------------
//
RESOURCE MENU_PANE r_mpx_collection_play_via_sub_menu
    {
    items = 
        {
        MENU_ITEM
            {
            command = EMPXCmdUpnpPlayViaLocal;
            txt = qtn_nmp_options_play_device;
            flags = EEikMenuItemRadioStart;
            },
        MENU_ITEM
            { 
            command = EMPXCmdUpnpPlayViaRemotePlayer;
            txt = qtn_nmp_options_play_homenet;
            flags = EEikMenuItemRadioEnd;
            }
        };
    }

// ---------------------------------------------------------------------------
// r_mpx_playback_collection_musicshop_sub_menu
// Collection view goto music shop menu items
// ---------------------------------------------------------------------------
//
RESOURCE MENU_PANE r_mpx_playback_collection_musicshop_sub_menu
    {
    items = 
        {
        MENU_ITEM
            {
            command = EMPXCmdGoToOperatorMusicShop;
             txt = "";
            },
        MENU_ITEM
            { 
            command = EMPXCmdGoToNokiaMusicShop;
            txt = qtn_mus_options_ovi_music;
            }
        };
    }

// ---------------------------------------------------------------------------
// r_mpx_upnp_copy_to_external_menu_interest
// Copy to remote menu definition needed by AIW to display and handle the menu
// ---------------------------------------------------------------------------
//
RESOURCE AIW_INTEREST r_mpx_upnp_copy_to_external_menu_interest
    {
    items=
        {
        AIW_CRITERIA_ITEM
            {
            id = EMPXCmdUPnPAiwCmdCopyToExternalCriteria;
            serviceCmd   = KAiwCmdUPnPCopy; //AIWCommon.hrh
            serviceClass = KAiwClassMenu;   //AIWCommon.hrh
            contentType  = "*";
            maxProviders = 1;
            }
        };
    }
//------------------------------------------------------------------------------
//
//      r_mpx_aiw_assign_interest
//      AIW interest criteria for "Use tone as" menu
//
//------------------------------------------------------------------------------
//
RESOURCE AIW_INTEREST r_mpx_aiw_assign_interest
    {
    items=
        {
        AIW_CRITERIA_ITEM
            {
            id = EMPXCmdAiwCmdAssign;
            serviceCmd = KAiwCmdAssign;
            contentType = "*";
            serviceClass = KAiwClassMenu;
            }
        };
    }    

//----------------------------------------------------
//
//    r_mplayer_use_as_cascade
//
//----------------------------------------------------
//
RESOURCE MENU_PANE r_mpx_use_as_cascade
    {
    items =
        {
        MENU_ITEM
            {
            command = EMPXCmdAiwCmdAssign;
            txt = "";
            }
        };
    }

// -----------------------------------------------------------------------------
// r_mpx_cui_add_songs_confirmation_query
// Confirmation query dialog for add songs after a new playlist is created
// -----------------------------------------------------------------------------
// 
RESOURCE DIALOG r_mpx_cui_add_songs_confirmation_query
    {
    flags = EGeneralQueryFlags;
    buttons = R_AVKON_SOFTKEYS_YES_NO;
    items =
        {
        DLG_LINE
            {
            type = EAknCtQuery;
            id = EGeneralQuery;
            control= AVKON_CONFIRMATION_QUERY 
                { 
                layout = EConfirmationQueryLayout;
                };
            }
        };
    }

// -----------------------------------------------------------------------------
// r_mpx_cui_delete_confirmation_query
// Confirmation query dialog for deleting.
// -----------------------------------------------------------------------------
// 
RESOURCE DIALOG r_mpx_cui_delete_confirmation_query
    {
    flags = EGeneralQueryFlags;
    buttons = R_AVKON_SOFTKEYS_YES_NO;
    items =
        {
        DLG_LINE
            {
            type = EAknCtQuery;
            id = EGeneralQuery;
            control= AVKON_CONFIRMATION_QUERY 
                { 
                layout = EConfirmationQueryLayout;
                };
            }
        };
    }

// -----------------------------------------------------------------------------
// r_mpx_cui_rename_query
// Name query dialog for renaming
// -----------------------------------------------------------------------------
// 
RESOURCE DIALOG r_mpx_cui_rename_query
    {
    flags = EAknGeneralQueryFlags;
    buttons = R_AVKON_SOFTKEYS_OK_CANCEL;
    items=
        {
        DLG_LINE
            {
            type = EAknCtQuery;
            id = EGeneralQuery;
            control= AVKON_DATA_QUERY 
                { 
                layout = EDataLayout;
                control = EDWIN 
                    {
                    };
                };
            }
        };
    }

// -----------------------------------------------------------------------------
// r_mpx_collection_generic_confirmation_query
// Generic confirmation query dialog.
// -----------------------------------------------------------------------------
// 
RESOURCE DIALOG r_mpx_collection_generic_confirmation_query
    {
    flags = EGeneralQueryFlags;
    buttons = R_AVKON_SOFTKEYS_YES_NO;
    items =
        {
        DLG_LINE
            {
            type = EAknCtQuery;
            id = EGeneralQuery;
            control= AVKON_CONFIRMATION_QUERY 
                { 
                layout = EConfirmationQueryLayout;
                };
            }
        };
    }

#ifdef __ENABLE_MSK
// ---------------------------------------------------------------------------
// r_mpx_cui_reorder_drop_cancel_cba
// ---------------------------------------------------------------------------
// 
RESOURCE CBA r_mpx_cui_reorder_drop_cancel_cba
    {
    buttons = 
        {
        CBA_BUTTON
            {
            id = EMPXCmdReorderDrop;
            txt = qtn_nmp_softkey_drop;
            },
        CBA_BUTTON
            {
            id = EMPXCmdReorderCancel;
            txt = text_softkey_cancel;
            },
        CBA_BUTTON
            {
            id = EMPXCmdReorderDrop;
            txt = text_softkey_empty;
            }
        };
    }
#else
// ---------------------------------------------------------------------------
// r_mpx_cui_reorder_drop_cancel_cba
// ---------------------------------------------------------------------------
// 
RESOURCE CBA r_mpx_cui_reorder_drop_cancel_cba
    {
    buttons = 
        {
        CBA_BUTTON
            {
            id = EMPXCmdReorderDrop;
            txt = qtn_nmp_softkey_drop;
            },
        CBA_BUTTON
            {
            id = EMPXCmdReorderCancel;
            txt = text_softkey_cancel;
            }
        };
    }
#endif // __ENABLE_MSK

#ifdef __ENABLE_MSK
// ---------------------------------------------------------------------------
// r_mpx_cui_reorder_grab_done_cba
// ---------------------------------------------------------------------------
// 
RESOURCE CBA r_mpx_cui_reorder_grab_done_cba
    {
    buttons = 
        {
        CBA_BUTTON
            {
            id = EMPXCmdReorderGrab;
            txt = qtn_nmp_softkey_grab;
            },
        CBA_BUTTON
            {
            id = EMPXCmdReorderDone;
            txt = text_softkey_done;
            },
        CBA_BUTTON
            {
            id = EMPXCmdReorderGrab;
            txt = text_softkey_empty;
            }
        };
    }
#else
// ---------------------------------------------------------------------------
// r_mpx_cui_reorder_grab_done_cba
// ---------------------------------------------------------------------------
// 
RESOURCE CBA r_mpx_cui_reorder_grab_done_cba
    {
    buttons = 
        {
        CBA_BUTTON
            {
            id = EMPXCmdReorderGrab;
            txt = qtn_nmp_softkey_grab;
            },
        CBA_BUTTON
            {
            id = EMPXCmdReorderDone;
            txt = text_softkey_done;
            }
        };
    }
#endif // __ENABLE_MSK

#ifdef __ENABLE_MSK
// ---------------------------------------------------------------------------
// r_mpx_options_back_cba_no_action
// ---------------------------------------------------------------------------
// 
RESOURCE CBA r_mpx_options_back_cba_no_action
    {
    buttons = 
        {
        CBA_BUTTON
            {
            txt = text_softkey_option;
            },
        CBA_BUTTON
            {
            txt = text_softkey_back;
            },
        CBA_BUTTON
            {
            txt = text_softkey_open;
            }
        };
    }
#else
// ---------------------------------------------------------------------------
// r_mpx_options_back_cba_no_action
// ---------------------------------------------------------------------------
// 
RESOURCE CBA r_mpx_options_back_cba_no_action
    {
    buttons = 
        {
        CBA_BUTTON
            {
            txt = text_softkey_option;
            },
        CBA_BUTTON
            {
            txt = text_softkey_back;
            }
        };
    }
#endif // __ENABLE_MSK

#ifdef __ENABLE_MSK
// ---------------------------------------------------------------------------
// r_mpx_options_exit_cba_no_action
// ---------------------------------------------------------------------------
// 
RESOURCE CBA r_mpx_options_exit_cba_no_action
    {
    buttons = 
        {
        CBA_BUTTON
            {
            txt = text_softkey_option;
            },
        CBA_BUTTON
            {
            txt = text_softkey_exit;
            },
        CBA_BUTTON
            {
            txt = text_softkey_open;
            }
        };
    }
#else
// ---------------------------------------------------------------------------
// r_mpx_options_exit_cba_no_action
// ---------------------------------------------------------------------------
// 
RESOURCE CBA r_mpx_options_exit_cba_no_action
    {
    buttons = 
        {
        CBA_BUTTON
            {
            txt = text_softkey_option;
            },
        CBA_BUTTON
            {
            txt = text_softkey_exit;
            }
        };
    }
#endif // __ENABLE_MSK

// ---------------------------------------------------------------------------
// r_mpx_options_hide_cba
// CBA with "Options" and "Hide" Softkey.
// ---------------------------------------------------------------------------
//
RESOURCE CBA r_mpx_options_hide_cba
    {
    buttons=
        {
        CBA_BUTTON
            {
            id = EAknSoftkeyOptions;
            txt = text_softkey_option;
            },
        CBA_BUTTON
            {
            id = EMPXCmdHideApp;
            txt = qtn_softkey_hide;
            }
        };
    }

// ---------------------------------------------------------------------------
// r_mpx_collection_transparent_cba
// transparent CBA with "Options" and "Hide" Softkey.
// ---------------------------------------------------------------------------
//
RESOURCE CBA r_mpx_collection_transparent_cba
    {
    flags = EEikCbaFlagTransparent;
    buttons =
        {
        CBA_BUTTON 
            { 
            id = EAknSoftkeyOptions; 
            txt = text_softkey_option; 
            },
        CBA_BUTTON 
            { 
            id = EMPXCmdHideApp; 
            txt = qtn_softkey_hide; 
            },
        CBA_BUTTON 
            { 
            id = EAknSoftkeyBack; 
            txt = text_softkey_back; 
            }   
        };
    }
    
// -----------------------------------------------------------------------------
//
// -----------------------------------------------------------------------------
//
RESOURCE CBA_BUTTON r_mpx_collection_rsk_find_cancel
    {
    id = EMPXCmdFindCancel;
    txt = text_softkey_cancel;
    }
    
// ---------------------------------------------------------------------------
// r_mpx_cui_collection_details_headings
// Headings for Collection Details popup
// ---------------------------------------------------------------------------
//
#ifdef RD_MULTIPLE_DRIVE
RESOURCE ARRAY r_mpx_cui_collection_details_headings
    {
    items =
        {
        LBUF
            {
            txt = qtn_mus_detail_number_of_songs;
            },
        LBUF
            {
            txt = qtn_mp_details_duration;
            },
        LBUF
            {
            txt = qtn_nmp_details_phone_memory;
            },
        LBUF
            {
            txt = qtn_nmp_details_mass_memory;
            },
        LBUF
            {
            txt = qtn_nmp_details_mmc;
            },
        LBUF
            {
            txt = qtn_nmp_details_date_refresh;
            }
        };
    }    
#else
RESOURCE ARRAY r_mpx_cui_collection_details_headings
    {
    items =
        {
        LBUF
            {
            txt = qtn_mus_detail_number_of_songs;
            },
        LBUF
            {
            txt = qtn_mp_details_duration;
            },
        LBUF
            {
            txt = qtn_nmp_details_phone_memory;
            },
        LBUF
            {
            txt = qtn_nmp_details_memory_card;
            },
        LBUF
            {
            txt = qtn_nmp_details_date_refresh;
            }
        };
    }    
#endif // RD_MULTIPLE_DRIVE   

// ---------------------------------------------------------------------------
// r_mpx_cui_playlist_details_headings_with_uri
// Headings for playlist Details popup with uri field
// ---------------------------------------------------------------------------
//
RESOURCE ARRAY r_mpx_cui_playlist_details_headings_with_uri
    {
    items =
        {
        LBUF
            {
            txt = qtn_mus_pl_detail_name;
            },
        LBUF
            {
            txt = qtn_mus_detail_number_of_songs;
            },
        LBUF
            {
            txt = qtn_mp_details_duration;
            },
        LBUF
            {
            txt = qtn_mp_details_location;
            },
        LBUF
            {
            txt = qtn_mp_details_date;
            },
        LBUF
            {
            txt = qtn_mp_details_time;
            }
        };
    }

// ---------------------------------------------------------------------------
// r_mpx_cui_playlist_details_headings_without_uri
// Headings for playlist Details popup without uri field
// ---------------------------------------------------------------------------
//
RESOURCE ARRAY r_mpx_cui_playlist_details_headings_without_uri
    {
    items =
        {
        LBUF
            {
            txt = qtn_mus_pl_detail_name;
            },
        LBUF
            {
            txt = qtn_mus_detail_number_of_songs;
            },
        LBUF
            {
            txt = qtn_mp_details_duration;
            },
        LBUF
            {
            txt = qtn_mp_details_date;
            },
        LBUF
            {
            txt = qtn_mp_details_time;
            }
        };
    }

// ---------------------------------------------------------------------------
// r_mpx_collection_waitnote_softkeys_empty_stop
// Softkeys used by generic wait note.
// ---------------------------------------------------------------------------
//
RESOURCE CBA r_mpx_collection_waitnote_softkeys_empty_stop
    {
    buttons=
        {
        CBA_BUTTON
            {
            txt = text_softkey_empty;
            },
        CBA_BUTTON
            {
            id = EAknSoftkeyCancel;
            txt = text_softkey_stop;
            }
        };
    }

// ---------------------------------------------------------------------------
// r_mpx_collectionview_title
// Title for Collection view.
// ---------------------------------------------------------------------------
// 
RESOURCE TBUF r_mpx_collection_view_title
    {
    buf = qtn_mp_title_collection_view;
    }

// ---------------------------------------------------------------------------
// r_qtn_qtn_nmp_title_reorder_list
// ---------------------------------------------------------------------------
//
RESOURCE TBUF r_qtn_nmp_title_reorder_list
    {
    buf = qtn_nmp_title_reorder_list;
    }

// ---------------------------------------------------------------------------
// r_mpx_cui_position_counter_txt
// ---------------------------------------------------------------------------
// 
RESOURCE TBUF r_mpx_cui_position_counter_txt
    {
    buf = qtn_nmp_position_counter;
    }

// ---------------------------------------------------------------------------
// r_mpx_qtn_nmp_query_add_songs
// Text for add songs after a new playlist is created.
// ---------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_qtn_nmp_query_add_songs
    {
    buf = qtn_nmp_query_add_songs;
    }

// ---------------------------------------------------------------------------
// r_mpx_qtn_query_common_conf_delete
// Text for single item deletion confirmation query.
// ---------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_qtn_query_common_conf_delete
    {
    buf = qtn_query_common_conf_delete;
    }

// ---------------------------------------------------------------------------
// r_mpx_qtn_nmp_del_songs_query
// Text for multiple tracks deletion confirmation query.
// ---------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_qtn_nmp_del_songs_query
    {
    buf = qtn_nmp_del_songs_query;
    }

// ---------------------------------------------------------------------------
// r_mpx_qtn_nmp_query_conf_delete_group
// Text for group deletion confirmation query.
// ---------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_qtn_nmp_query_conf_delete_group
    {
    buf = qtn_nmp_query_conf_delete_group;
    }

// ---------------------------------------------------------------------------
// r_mpx_qtn_nmp_del_songs_wait_note
// Text for multiple item deletion wait note.
// ---------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_qtn_nmp_del_songs_wait_note
    {
    buf = qtn_nmp_del_songs_wait_note;
    }

// ---------------------------------------------------------------------------
// r_mpx_qtn_nmp_note_removing_many
// Text for multiple item remove wait note.
// ---------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_qtn_nmp_note_removing_many
    {
    buf = qtn_nmp_note_removing_many;
    }

// ---------------------------------------------------------------------------
// r_mpx_qtn_mus_query_conf_remove_many
// Text for multiple item remove confirmation query.
// ---------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_qtn_mus_query_conf_remove_many
    {
    buf = qtn_mus_query_conf_remove_many;
    }

// ---------------------------------------------------------------------------
// r_mpx_qtn_mus_note_removing_track
// Text for single item remove wait note.
// ---------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_qtn_mus_note_removing_track
    {
    buf = qtn_mus_note_removing_track;
    }

// ---------------------------------------------------------------------------
// r_mpx_qtn_mus_query_conf_remove_track
// Text for single item remove confirmation query.
// ---------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_qtn_mus_query_conf_remove_track
    {
    buf = qtn_mus_query_conf_remove_track;
    }

// ---------------------------------------------------------------------------
// r_mpx_qtn_album_waiting_deleting
// Text for single item deletion wait note.
// ---------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_qtn_album_waiting_deleting
    {
    buf = qtn_album_waiting_deleting;
    }

// ---------------------------------------------------------------------------
// r_mpx_qtn_mus_query_conf_delete_all
// Text for group deletion wait note.
// ---------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_qtn_mus_query_conf_delete_all
    {
    buf = qtn_mus_query_conf_delete_all;
    }

// ---------------------------------------------------------------------------
// r_mpx_qtn_nmp_title_collection_details
// Text used for Collection Details title.
// ---------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_qtn_nmp_title_collection_details
    {
    buf = qtn_nmp_title_collection_details1;
    }

// ---------------------------------------------------------------------------
// r_mpx_qtn_nmp_title_playlist_details
// Text used for Collection Details title.
// ---------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_qtn_nmp_title_playlist_details
    {
    buf = qtn_mus_title_details_pl;
    }

// -----------------------------------------------------------------------------
// r_mpx_collection_phone_memory_root_path
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_collection_phone_memory_root_path
    {
    buf = text_phone_memory_root_path;
    }

// -----------------------------------------------------------------------------
// r_mpx_collection_memory_card_root_path
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_collection_memory_card_root_path
    {
    buf = text_memory_card_root_path;
    }

#ifdef RD_MULTIPLE_DRIVE
// -----------------------------------------------------------------------------
// r_mpx_cui_collection_details_card_unavailable_item
// -----------------------------------------------------------------------------
//  
RESOURCE TBUF r_mpx_cui_collection_details_memory_unavailable
    {
    buf = qtn_nmp_memory_unavailable;
    }   
#endif // RD_MULTIPLE_DRIVE   

// -----------------------------------------------------------------------------
// r_mpx_cui_collection_details_card_unavailable_item
// -----------------------------------------------------------------------------
//  
RESOURCE TBUF r_mpx_cui_collection_details_card_unavailable_item
    {
    buf = qtn_nmp_mmc_unavailable;
    }   

// -----------------------------------------------------------------------------
// r_mpx_qtn_nmp_prmpt_new_name
// -----------------------------------------------------------------------------
//  
RESOURCE TBUF r_mpx_qtn_nmp_prmpt_new_name
    {
    buf = qtn_nmp_prmpt_new_name;
    }   

// -----------------------------------------------------------------------------
// r_mpx_qtn_mp_unknown
// -----------------------------------------------------------------------------
//  
RESOURCE TBUF r_mpx_qtn_mp_unknown
    {
    buf = qtn_mp_list_unknown;
    }   

// -----------------------------------------------------------------------------
// r_mpx_qtn_nmp_unknown_artist
// -----------------------------------------------------------------------------
//  
RESOURCE TBUF r_mpx_qtn_nmp_unknown_artist
    {
    buf = qtn_nmp_title_unknown_artist;
    }   

// -----------------------------------------------------------------------------
// r_mpx_qtn_mus_title_unknown_album
// -----------------------------------------------------------------------------
//  
RESOURCE TBUF r_mpx_qtn_mus_title_unknown_album
    {
    buf = qtn_mus_title_unknown_album;
    }

// -----------------------------------------------------------------------------
// r_mpx_qtn_mus_title_unknown_genre
// -----------------------------------------------------------------------------
//  
RESOURCE TBUF r_mpx_qtn_mus_title_unknown_genre
    {
    buf = qtn_mus_title_unknown_genre;
    }   

// -----------------------------------------------------------------------------
// r_mpx_qtn_mus_title_unknown_composer
// -----------------------------------------------------------------------------
//  
RESOURCE TBUF r_mpx_qtn_mus_title_unknown_composer
    {
    buf = qtn_mus_title_unknown_composer;
    }       

// -----------------------------------------------------------------------------
// r_mpx_collection_note_delete_fail
// Text used when a delete fails due to a file in use error
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_collection_note_delete_fail
    {
    buf = qtn_nmp_delete_file_open;
    }
    
// -----------------------------------------------------------------------------
// r_mpx_collection_note_delete_fail_multi_selection
// Text used when a delete fails due to a file in use error
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_collection_note_delete_fail_multi_selection
    {
    buf = qtn_nmp_delete_mutl_file_open;
    }

// -----------------------------------------------------------------------------
// r_mpx_collection_note_updating_multiple_items
// wait note text for updating multiple items
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_collection_note_updating_multiple_items
    {
    buf = qtn_nmp_note_updating_name;
    }

// -----------------------------------------------------------------------------
// r_mpx_collection_note_updating_item
// wait note text for updating single item
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_collection_note_updating_item
    {
    buf = qtn_nmp_note_updating_name1;
    }

// -----------------------------------------------------------------------------
// r_mpx_collection_info_file_not_found
// info note for file not found
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_collection_info_file_not_found
    {
    buf = qtn_mp_note_broken_file;
    }

// -----------------------------------------------------------------------------
// r_mpx_collection_query_send_invalid_songs_txt
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_collection_query_send_invalid_songs_txt
    {
    buf = qtn_nmp_query_send_valid_songs1;
    }

// -----------------------------------------------------------------------------
// r_mpx_collection_send_all_invalid_songs_note_txt
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_collection_send_all_invalid_songs_note_txt
    {
    buf = qtn_nmp_note_nothing_to_send;
    }

// -----------------------------------------------------------------------------
// r_mpx_collection_category_artist_lbx_emptytext
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_collection_artist_lbx_emptytext
    {
    buf = qtn_nmp_no_artists_editor;
    }

// -----------------------------------------------------------------------------
// r_mpx_collection_album_lbx_emptytext
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_collection_album_lbx_emptytext
    {
    buf = qtn_nmp_no_albums_editor;
    }

// -----------------------------------------------------------------------------
// r_mpx_collection_genre_lbx_emptytext
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_collection_genre_lbx_emptytext
    {
    buf = qtn_nmp_no_genres_editor;
    }

// -----------------------------------------------------------------------------
// r_mpx_collection_composer_lbx_emptytext
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_collection_composer_lbx_emptytext
    {
    buf = qtn_nmp_no_composers_editor;
    }

// -----------------------------------------------------------------------------
// r_mpx_collection_songs_lbx_emptytext
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_collection_song_lbx_emptytext
    {
    buf = qtn_nmp_no_songs_editor;
    }

// -----------------------------------------------------------------------------
// r_mpx_collection_note_rename_with_invalid
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_collection_note_rename_with_invalid
    {
    buf = qtn_nmp_note_rename_with_invalid;
    }

// -----------------------------------------------------------------------------
// r_mpx_collection_note_empty_playlist
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_collection_note_empty_playlist
    {
    buf = qtn_nmp_note_empty_playlist;
    }

// -----------------------------------------------------------------------------
//    r_mpx_collection_wait_upnp_loading_song
//    Text used in wait note while loading a song to remote player.
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_collection_wait_upnp_loading_song
    {
    buf = qtn_nmp_wait_loading_items;
    }

// -----------------------------------------------------------------------------
// r_mpx_menu_play_via_on_device
// Text used when Play via sub menu opens
// This is local player type name
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_menu_play_via_on_device
    {
    buf = qtn_nmp_options_play_device;
    }
    
// -----------------------------------------------------------------------------
// r_mpx_menu_play_via_home_net
// Text used when Play via sub menu opens
// This is remote player type name
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_menu_play_via_home_net
    {
    buf = qtn_nmp_options_play_homenet;
    }

// -----------------------------------------------------------------------------
// r_mpx_collection_note_remote_connection_failed
// Text used when a remote connection failed and player reverts to Local
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_collection_note_remote_connection_failed
    {
    buf = qtn_nmp_note_remote_connection_failed;
    }

// -----------------------------------------------------------------------------
// r_mpx_collection_info_remote_copy_one
// Confirmation note after 1 file was successfully copied to remote server
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_collection_info_remote_copy_one
    {
    buf = qtn_nmp_info_copy_one;
    }

// -----------------------------------------------------------------------------
// r_mpx_collection_info_remote_copy_many
// Confirmation note after many files were successfully copied to remote server
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_collection_info_remote_copy_many
    {
    buf = qtn_nmp_info_copy_many;
    }

// -----------------------------------------------------------------------------
// r_mpx_qtn_nmp_del_batch_songs_wait_note
// Text for group deletion wait note.
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_qtn_nmp_del_batch_songs_wait_note
    {
    buf = qtn_nmp_del_batch_songs_wait_note;
    }

    
//------------------------------------------------------------------------------
// r_mpx_wait_note
// Generic Wait note.      
//------------------------------------------------------------------------------
//
RESOURCE DIALOG r_mpx_wait_note
    {
    flags = EAknWaitNoteFlags;
    buttons = R_AVKON_SOFTKEYS_EMPTY;
    items =
        {
        DLG_LINE
            {
            type = EAknCtNote;
            id = 0x1000;
            control = AVKON_NOTE
                {
                layout = EWaitLayout;
                animation = R_QGN_GRAF_WAIT_BAR_ANIM;
                };
            }
        };
    }

// ---------------------------------------------------------------------------
// r_mpx_collection_details_one_album
// Details text for single item
// ---------------------------------------------------------------------------
// 
RESOURCE TBUF r_mpx_collection_details_one_album
    {
    buf = qtn_vmp_collection_detail_1_album;
    }


// ---------------------------------------------------------------------------
// r_mpx_collection_details_one_song
// Details text for single item
// ---------------------------------------------------------------------------
// 
RESOURCE TBUF r_mpx_collection_details_one_song
    {
    buf = qtn_vmp_detail_1_song;
    }

// ---------------------------------------------------------------------------
// r_mpx_collection_details_number_of_songs
// Details text for multiple items
// ---------------------------------------------------------------------------
// 
RESOURCE TBUF r_mpx_collection_details_number_of_songs
    {
    buf = qtn_vmp_detail_n_songs;
    }

// ---------------------------------------------------------------------------
// r_mpx_collection_unknown
// ---------------------------------------------------------------------------
// 
RESOURCE TBUF r_mpx_collection_unknown
    {
    buf = qtn_vmp_unknown;
    }
    
// -----------------------------------------------------------------------------
// r_qtn_mus_about_note
// About note heading  
// -----------------------------------------------------------------------------
// 
 RESOURCE TBUF r_qtn_mus_about_note
    {
    buf = qtn_mus_about_note;
    }
    
    
// -----------------------------------------------------------------------------
// r_qtn_mus_about_note
// About note version content   
// -----------------------------------------------------------------------------
// 
RESOURCE TBUF r_qtn_mus_about_version 
    {
    buf = qtn_mus_about_version; 
    }
    
      
// -----------------------------------------------------------------------------
// r_mpx_about_dialog
// About Dialog
// -----------------------------------------------------------------------------
//
RESOURCE DIALOG r_mpx_about_dialog
     {
     flags=EEikDialogFlagNoDrag |EEikDialogFlagCbaButtons |EEikDialogFlagWait;
     buttons = R_AVKON_SOFTKEYS_OK_EMPTY;
     items =
         {
         DLG_LINE
             {
             type = EAknCtPopupHeadingPane;
             id = EAknMessageQueryHeaderId;
             control = AVKON_HEADING
                 {
                 headinglayout = R_AVKON_LIST_HEADING_PANE_POPUPS;
                 };
             },
         DLG_LINE
             {
             type = EAknCtMessageQuery;
             id = EAknMessageQueryContentId;
             control = AVKON_MESSAGE_QUERY
                 {
                 };
             }
         };
     }

// ---------------------------------------------------------------------------
// r_qtn_nmp_note_educating_the_user
// Text displays for educating user to optimize there music experience
// ---------------------------------------------------------------------------
// 
RESOURCE TBUF r_qtn_nmp_note_educating_the_user
    {
    buf = qtn_nmp_note_educating_the_user;
    }
    
// -----------------------------------------------------------------------------
// r_mpx_cui_educating_the_user_query
// Educating User query message  
// -----------------------------------------------------------------------------
// 
RESOURCE DIALOG r_mpx_cui_educating_the_user_query
    {
    flags = EGeneralQueryFlags;
    buttons = R_AVKON_SOFTKEYS_YES_NO;
    items=
        {
        DLG_LINE
            {
            type = EAknCtPopupHeadingPane;
            id = EAknMessageQueryHeaderId;
            control = AVKON_HEADING
                {
                headinglayout = 0;    
                };
            },
        DLG_LINE
            {
            type = EAknCtMessageQuery;
            id = EAknMessageQueryContentId;
            control = AVKON_MESSAGE_QUERY
                {
                };
            }
        };       
    }
    
// ---------------------------------------------------------------------------
// r_mpx_collection_albumsongs_list_cba
// ---------------------------------------------------------------------------
// 
RESOURCE CBA r_mpx_collection_albumsongs_list_cba
    {
    buttons = 
        {
        CBA_BUTTON
            {
            id = EAknSoftkeyYes;
            txt = "";
            },
        CBA_BUTTON
            {
            id = EAknSoftkeyCancel;
            txt = text_softkey_cancel;
            },
        CBA_BUTTON
            {
            id = EAknSoftkeyYes;
            txt = "";
            }
        };
    }

// ---------------------------------------------------------------------------
// r_mpx_shuffle
// Shuffle item in the list. First item in list with more than one item.
// ---------------------------------------------------------------------------
// 
RESOURCE TBUF r_mpx_shuffle
    {
    buf = qtn_mus_shuffle;
    }

// ---------------------------------------------------------------------------
// r_mpx_mediawall_title_shuffle_all
// Shuffle item in the media wall. First item in media wall when there's more than one item.
// ---------------------------------------------------------------------------
// 
RESOURCE TBUF r_mpx_mediawall_title_shuffle_all
    {
    buf = qtn_mus_mediawall_title_shuffle_all;
    }

// ---------------------------------------------------------------------------
// r_mpx_shuffle_single
// Shuffle item in the list. First item in list with more than one item.
// ---------------------------------------------------------------------------
// 
RESOURCE TBUF r_mpx_tbone_shuffle
    {
    buf = qtn_mus_tbone_shuffle;
    }

// ---------------------------------------------------------------------------
// r_mpx_shuffle_popuplist
// Shuffle item in the popuplist. First item in list with more than one item.
// ---------------------------------------------------------------------------
// 
RESOURCE TBUF r_mpx_mediawall_dialog_shuffle
    {
    buf = qtn_mus_mediawall_dialog_shuffle;
    }

// ---------------------------------------------------------------------------
// r_mpx_mp_list_artist_unknown
// Text shown if there is at least one artist for which the artist name is not available.
// ---------------------------------------------------------------------------
// 
RESOURCE TBUF r_mpx_mp_list_artist_unknown
    {
    buf = qtn_mp_unknown;
    }

// ---------------------------------------------------------------------------
// r_mpx_mp_list_album_unknown
// Text shown if the album name is not available
// ---------------------------------------------------------------------------
// 
RESOURCE TBUF r_mpx_mp_list_album_unknown
    {
    buf = qtn_vmp_unknown;
    }

// ---------------------------------------------------------------------------
// r_mpx_mediawall_artist_unknown
// Text shown if the artist name is not available in media wall
// ---------------------------------------------------------------------------
// 
RESOURCE TBUF r_mpx_mediawall_artist_unknown
    {
    buf = qtn_mus_mediawall_artist_unknown;
    }

// ---------------------------------------------------------------------------
// r_mpx_mediawall_album_unknown
// Text shown if the artist name is not available in media wall
// ---------------------------------------------------------------------------
// 
RESOURCE TBUF r_mpx_mediawall_album_unknown
    {
    buf = qtn_mus_mediawall_album_unknown;
    }

// ---------------------------------------------------------------------------
// r_mpx_mediawall_popup_title_unknown
// Text shown if the album name is not available in media wall
// ---------------------------------------------------------------------------
// 
RESOURCE TBUF r_mpx_mediawall_popup_title_unknown
    {
    buf = qtn_mus_mediawall_popup_title_unknown;
    }

// ---------------------------------------------------------------------------
// r_mpx_songs_artist_unknown
// Text shown if the artist name is not available in tracks level view
// ---------------------------------------------------------------------------
// 
RESOURCE TBUF r_mpx_songs_artist_unknown
    {
    buf = qtn_mus_songs_artist_unknown;
    }

// ---------------------------------------------------------------------------
// Text shown if there is no content to display for Artists & Albums.
// ---------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_vmp_no_albums
    {
    buf = qtn_vmp_no_albums;
    }

// ---------------------------------------------------------------------------
// Text shown when there is no content to display in tracks level view.
// ---------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_vmp_no_songs
    {
    buf = qtn_vmp_no_songs;
    }

// ---------------------------------------------------------------------------
// r_mpx_music_num_songs_duration
// Text shown if there is more than one song in the playlist.
// where %N is the number of songs within the playlist 
// and %U is the duration time for the total playlist, 
// in the format hh:mm is displayed.
// if the playlist is empty, the duration is displayed as dashes (-- : --)
// ---------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_music_num_songs_duration
    {
    buf = qtn_mus_music_num_songs_duration;
    }

// ---------------------------------------------------------------------------
// r_mpx_music_one_song_duration
// d:Text shown if there is only one song in the playlist
// d:%U is the duration time for the total playlist, 
// d:in the format hh:mm is displayed.
// ---------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_music_one_song_duration
    {
    buf = qtn_mus_music_one_song_duration;
    }

// ---------------------------------------------------------------------------
// List box text to show the number of items in the collection
// For the case there're 0 or more than 1 song in the collection
// ---------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_music_num_songs
    {
    buf = qtn_mus_music_num_songs;
    }

// ---------------------------------------------------------------------------
// List box text to show the number of items in the collection
// For the case there's only 1 song in the collection
// ---------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_music_one_song
    {
    buf = qtn_mus_music_one_song;
    }

// ---------------------------------------------------------------------------
// Text shown when the genre name is not available
// ---------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_genre_unknown
    {
    buf = qtn_mus_genre_unknown;
    }

// ---------------------------------------------------------------------------
// Text shown when there is no content to display in genre view
// ---------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_vmp_no_genres
    {
    buf = qtn_vmp_no_genres;
    }

// End of File
