/*
* Copyright (c) 2006 Nokia Corporation and/or its subsidiary(-ies).
* All rights reserved.
* This component and the accompanying materials are made available
* under the terms of "Eclipse Public License v1.0"
* which accompanies this distribution, and is available
* at the URL "http://www.eclipse.org/legal/epl-v10.html".
*
* Initial Contributors:
* Nokia Corporation - initial contribution.
*
* Contributors:
*
* Description:  Resource definitions for project mpxwaitnotedialog
*
*/


NAME MPWN

#include <avkon.rsg>
#include <avkon.rh>
#include <avkon.loc>
#include <eikon.rh>
#include <avkon.mbg>
#include <bldvariant.hrh>

#include <mpxwaitnotedialog.loc>

RESOURCE RSS_SIGNATURE { }
RESOURCE TBUF { buf=""; }

// RESOURCE DEFINITIONS

//------------------------------------------------------------------------------
//   
//      r_mpx_generic_wait_note
//      Generic wait note.
//      
//------------------------------------------------------------------------------
//
RESOURCE DIALOG r_mpx_generic_wait_note
    {
    flags = EAknWaitNoteFlags;
    buttons = R_AVKON_SOFTKEYS_EMPTY;
    items =
        {
        DLG_LINE
            {
            type = EAknCtNote;
            id = 0x1000;
            control = AVKON_NOTE
                {
                layout = EWaitLayout;
                animation = R_QGN_GRAF_WAIT_BAR_ANIM;
                };
            }
        };
    }
   
// -----------------------------------------------------------------------------
//
//    r_mpx_waitnote_softkeys_empty_stop
//    Softkeys used by generic wait note.
//
// -----------------------------------------------------------------------------
//
RESOURCE CBA r_mpx_waitnote_softkeys_empty_stop
    {
    buttons=
        {
        CBA_BUTTON
            {
            txt = text_softkey_empty;
            },
        CBA_BUTTON
            {
            id = EAknSoftkeyCancel;
            txt = text_softkey_stop;
            }
        };
    }

// -----------------------------------------------------------------------------
//
//    r_mpx_scanning_db_txt
//    Text for scanning library wait note.
//
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_scanning_db_txt
    {
    buf = qtn_nmp_note_scanning_db;
    }

// -----------------------------------------------------------------------------
//
//    r_mpx_scanning_complete_txt
//    Text for scanning library dialog.
//
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_scanning_complete_txt
    {
    buf = qtn_mus_note_search_complete1;
    }

// -----------------------------------------------------------------------------
//
//    r_mpx_scanning_stopped_txt
//    Text for scanning library dialog.
//
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_scanning_stopped_txt
    {
    buf = qtn_mus_note_search_stopped1;
    }

// -----------------------------------------------------------------------------
//
//    r_mpx_refreshing_db_txt
//    Text for refreshing library wait note.
//
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_refreshing_db_txt
    {
    buf = qtn_mus_note_refreshing_db;
    }

// -----------------------------------------------------------------------------
//
//    r_mpx_refreshing_db_complete_txt
//    Text for refreshing library popup dialog.
//
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_refreshing_db_complete_txt
    {
    buf = qtn_mus_note_refreshing_db_complete;
    }

// -----------------------------------------------------------------------------
//
//    r_mpx_refreshing_db_stopped_txt
//    Text for refreshing library popup dialog.
//
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_refreshing_db_stopped_txt
    {
    buf = qtn_mus_note_refreshing_db_stopped;
    }

// -----------------------------------------------------------------------------
//
//    r_mpx_mem_lo_not_enough_memory
//    Text for not enough memory
//    
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_mem_lo_not_enough_memory
    {
    buf = qtn_nmp_note_no_mem_complete_refresh;
    }

// -----------------------------------------------------------------------------
//
//  r_mpx_usb_connection_in_progress
//  Text for USB transfer wait note  
//
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_usb_connection_in_progress
    {
    buf = qtn_nmp_note_usb_connection_in_progress;
    }


// -----------------------------------------------------------------------------
//
//  r_mpx_mtp_transfer_in_progress
//  Text for MTP transfer wait note  
//
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_mtp_transfer_in_progress
    {
    buf = qtn_mus_note_media_transfer_in_progress;
    }

// -----------------------------------------------------------------------------
//
//  r_mpx_repairing_corrupt_db
//  Text for rebuilding corrupt databases
//
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_repairing_corrupt_db
    {
    buf = qtn_nmp_note_rebuilding_db;
    }

// -----------------------------------------------------------------------------
//   
//    r_mpx_query_yes_no
//    Ask the user for a yes/no question
//
// -----------------------------------------------------------------------------
// 
RESOURCE DIALOG r_mpx_query_yes_no
    {
    flags = EGeneralQueryFlags;
    buttons = R_AVKON_SOFTKEYS_YES_NO;
    items =
        {
        DLG_LINE
            {
            type = EAknCtQuery;
            id = EGeneralQuery;
            control= AVKON_CONFIRMATION_QUERY 
                { 
                layout = EConfirmationQueryLayout;
                };
            }
        };
    }

// -----------------------------------------------------------------------------
//   
//    r_mpx_empty_close_note
//    Dialog note with "empty" and "close" CBAs
//
// -----------------------------------------------------------------------------
// 
RESOURCE DIALOG r_mpx_empty_close_note
    {
    flags = EAknInformationNoteFlags;
    buttons = R_AVKON_SOFTKEYS_CLOSE;
    items =
        {
        DLG_LINE
            {
            type = EAknCtNote;
            id = EGeneralQuery;
            control = AVKON_NOTE
                {
                layout = EGeneralLayout;
                animation = R_QGN_NOTE_INFO_ANIM;
                };
            }
        };
    }

// -----------------------------------------------------------------------------
//
//    r_mpx_opening_txt
//    Text for opening wait note.
//
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_opening_txt
    {
    buf = qtn_nmp_note_opening;
    }

// -----------------------------------------------------------------------------
//
//    r_mpx_formatting_txt
//    Text for formatting wait note.
//
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_formatting_txt
    {
    buf = qtn_nmp_note_mp_unavailable_mmc;
    }

// -----------------------------------------------------------------------------
//
//    r_mpx_updating_library_txt
//    Text for updating library wait note.
//
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_updating_library_txt
    {
    buf = qtn_mus_note_updating_library;
    }
    
// -----------------------------------------------------------------------------
//
//    r_mpx_uptodate_txt
//    Text for update music library complete.
//
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_mpx_uptodate_txt
    {
    buf = qtn_mus_note_uptodate;
    }
